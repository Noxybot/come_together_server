// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: come_together.proto

#include "come_together.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_come_5ftogether_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_access_token_come_5ftogether_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_come_5ftogether_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_application_id_come_5ftogether_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_come_5ftogether_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_chat_info_come_5ftogether_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_come_5ftogether_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_chat_message_come_5ftogether_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_come_5ftogether_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_marker_info_come_5ftogether_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_come_5ftogether_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_user_info_come_5ftogether_2eproto;
namespace come_together_grpc {
class imageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<image> _instance;
} _image_default_instance_;
class access_tokenDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<access_token> _instance;
} _access_token_default_instance_;
class application_idDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<application_id> _instance;
} _application_id_default_instance_;
class logout_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<logout_request> _instance;
} _logout_request_default_instance_;
class logout_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<logout_response> _instance;
} _logout_response_default_instance_;
class send_push_token_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<send_push_token_request> _instance;
} _send_push_token_request_default_instance_;
class send_push_token_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<send_push_token_response> _instance;
} _send_push_token_response_default_instance_;
class delete_marker_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<delete_marker_request> _instance;
} _delete_marker_request_default_instance_;
class delete_marker_reponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<delete_marker_reponse> _instance;
} _delete_marker_reponse_default_instance_;
class ask_token_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ask_token_request> _instance;
} _ask_token_request_default_instance_;
class ask_token_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ask_token_response> _instance;
} _ask_token_response_default_instance_;
class verify_token_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<verify_token_request> _instance;
} _verify_token_request_default_instance_;
class verify_token_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<verify_token_response> _instance;
} _verify_token_response_default_instance_;
class update_info_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<update_info_request> _instance;
  const ::come_together_grpc::marker_info* m_info_;
  const ::come_together_grpc::user_info* u_info_;
} _update_info_request_default_instance_;
class update_info_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<update_info_response> _instance;
} _update_info_response_default_instance_;
class eventDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<event> _instance;
  const ::come_together_grpc::marker_info* m_info_;
  const ::come_together_grpc::chat_message* c_message_;
  const ::come_together_grpc::user_info* u_info_;
} _event_default_instance_;
class chat_infoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<chat_info> _instance;
} _chat_info_default_instance_;
class get_chat_messages_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<get_chat_messages_request> _instance;
} _get_chat_messages_request_default_instance_;
class chat_messageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<chat_message> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr text_;
} _chat_message_default_instance_;
class send_chat_message_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<send_chat_message_request> _instance;
} _send_chat_message_request_default_instance_;
class send_chat_message_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<send_chat_message_response> _instance;
} _send_chat_message_response_default_instance_;
class get_info_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<get_info_request> _instance;
} _get_info_request_default_instance_;
class get_info_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<get_info_response> _instance;
  const ::come_together_grpc::user_info* u_info_;
  const ::come_together_grpc::marker_info* m_info_;
  const ::come_together_grpc::chat_info* c_info_;
} _get_info_response_default_instance_;
class get_images_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<get_images_request> _instance;
} _get_images_request_default_instance_;
class manage_image_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<manage_image_request> _instance;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_uuid_;
} _manage_image_request_default_instance_;
class manage_image_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<manage_image_response> _instance;
} _manage_image_response_default_instance_;
class check_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<check_request> _instance;
} _check_request_default_instance_;
class check_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<check_response> _instance;
} _check_response_default_instance_;
class login_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<login_request> _instance;
} _login_request_default_instance_;
class login_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<login_response> _instance;
} _login_response_default_instance_;
class register_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<register_request> _instance;
} _register_request_default_instance_;
class register_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<register_response> _instance;
} _register_response_default_instance_;
class user_infoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<user_info> _instance;
} _user_info_default_instance_;
class marker_infoDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<marker_info> _instance;
} _marker_info_default_instance_;
class add_marker_requestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<add_marker_request> _instance;
} _add_marker_request_default_instance_;
class add_marker_responseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<add_marker_response> _instance;
} _add_marker_response_default_instance_;
}  // namespace come_together_grpc
static void InitDefaultsscc_info_access_token_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_access_token_default_instance_;
    new (ptr) ::come_together_grpc::access_token();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::access_token::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_access_token_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_access_token_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_add_marker_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_add_marker_request_default_instance_;
    new (ptr) ::come_together_grpc::add_marker_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::add_marker_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_add_marker_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_add_marker_request_come_5ftogether_2eproto}, {
      &scc_info_marker_info_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_add_marker_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_add_marker_response_default_instance_;
    new (ptr) ::come_together_grpc::add_marker_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::add_marker_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_add_marker_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_add_marker_response_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_application_id_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_application_id_default_instance_;
    new (ptr) ::come_together_grpc::application_id();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::application_id::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_application_id_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_application_id_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_ask_token_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_ask_token_request_default_instance_;
    new (ptr) ::come_together_grpc::ask_token_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::ask_token_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ask_token_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ask_token_request_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_ask_token_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_ask_token_response_default_instance_;
    new (ptr) ::come_together_grpc::ask_token_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::ask_token_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ask_token_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ask_token_response_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_chat_info_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_chat_info_default_instance_;
    new (ptr) ::come_together_grpc::chat_info();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::chat_info::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_chat_info_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_chat_info_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_chat_message_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_chat_message_default_instance_;
    new (ptr) ::come_together_grpc::chat_message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::chat_message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_chat_message_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_chat_message_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_check_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_check_request_default_instance_;
    new (ptr) ::come_together_grpc::check_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::check_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_check_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_check_request_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_check_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_check_response_default_instance_;
    new (ptr) ::come_together_grpc::check_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::check_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_check_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_check_response_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_delete_marker_reponse_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_delete_marker_reponse_default_instance_;
    new (ptr) ::come_together_grpc::delete_marker_reponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::delete_marker_reponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_delete_marker_reponse_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_delete_marker_reponse_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_delete_marker_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_delete_marker_request_default_instance_;
    new (ptr) ::come_together_grpc::delete_marker_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::delete_marker_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_delete_marker_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_delete_marker_request_come_5ftogether_2eproto}, {
      &scc_info_access_token_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_event_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_event_default_instance_;
    new (ptr) ::come_together_grpc::event();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::event::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_event_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_event_come_5ftogether_2eproto}, {
      &scc_info_marker_info_come_5ftogether_2eproto.base,
      &scc_info_chat_message_come_5ftogether_2eproto.base,
      &scc_info_user_info_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_get_chat_messages_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_get_chat_messages_request_default_instance_;
    new (ptr) ::come_together_grpc::get_chat_messages_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::get_chat_messages_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_get_chat_messages_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_get_chat_messages_request_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_get_images_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_get_images_request_default_instance_;
    new (ptr) ::come_together_grpc::get_images_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::get_images_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_get_images_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_get_images_request_come_5ftogether_2eproto}, {
      &scc_info_access_token_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_get_info_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_get_info_request_default_instance_;
    new (ptr) ::come_together_grpc::get_info_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::get_info_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_get_info_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_get_info_request_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_get_info_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_get_info_response_default_instance_;
    new (ptr) ::come_together_grpc::get_info_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::get_info_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_get_info_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_get_info_response_come_5ftogether_2eproto}, {
      &scc_info_user_info_come_5ftogether_2eproto.base,
      &scc_info_marker_info_come_5ftogether_2eproto.base,
      &scc_info_chat_info_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_image_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_image_default_instance_;
    new (ptr) ::come_together_grpc::image();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::image::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_image_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_image_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_login_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_login_request_default_instance_;
    new (ptr) ::come_together_grpc::login_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::login_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_login_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_login_request_come_5ftogether_2eproto}, {
      &scc_info_access_token_come_5ftogether_2eproto.base,
      &scc_info_application_id_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_login_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_login_response_default_instance_;
    new (ptr) ::come_together_grpc::login_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::login_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_login_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_login_response_come_5ftogether_2eproto}, {
      &scc_info_user_info_come_5ftogether_2eproto.base,
      &scc_info_access_token_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_logout_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_logout_request_default_instance_;
    new (ptr) ::come_together_grpc::logout_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::logout_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_logout_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_logout_request_come_5ftogether_2eproto}, {
      &scc_info_access_token_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_logout_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_logout_response_default_instance_;
    new (ptr) ::come_together_grpc::logout_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::logout_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_logout_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_logout_response_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_manage_image_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_manage_image_request_default_instance_;
    new (ptr) ::come_together_grpc::manage_image_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::manage_image_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_manage_image_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_manage_image_request_come_5ftogether_2eproto}, {
      &scc_info_access_token_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_manage_image_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_manage_image_response_default_instance_;
    new (ptr) ::come_together_grpc::manage_image_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::manage_image_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_manage_image_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_manage_image_response_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_marker_info_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_marker_info_default_instance_;
    new (ptr) ::come_together_grpc::marker_info();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::marker_info::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_marker_info_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_marker_info_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_register_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_register_request_default_instance_;
    new (ptr) ::come_together_grpc::register_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::register_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_register_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_register_request_come_5ftogether_2eproto}, {
      &scc_info_user_info_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_register_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_register_response_default_instance_;
    new (ptr) ::come_together_grpc::register_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::register_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_register_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_register_response_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_send_chat_message_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_send_chat_message_request_default_instance_;
    new (ptr) ::come_together_grpc::send_chat_message_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::send_chat_message_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_send_chat_message_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_send_chat_message_request_come_5ftogether_2eproto}, {
      &scc_info_access_token_come_5ftogether_2eproto.base,
      &scc_info_chat_message_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_send_chat_message_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_send_chat_message_response_default_instance_;
    new (ptr) ::come_together_grpc::send_chat_message_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::send_chat_message_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_send_chat_message_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_send_chat_message_response_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_send_push_token_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_send_push_token_request_default_instance_;
    new (ptr) ::come_together_grpc::send_push_token_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::send_push_token_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_send_push_token_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_send_push_token_request_come_5ftogether_2eproto}, {
      &scc_info_application_id_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_send_push_token_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_send_push_token_response_default_instance_;
    new (ptr) ::come_together_grpc::send_push_token_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::send_push_token_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_send_push_token_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_send_push_token_response_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_update_info_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_update_info_request_default_instance_;
    new (ptr) ::come_together_grpc::update_info_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::update_info_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_update_info_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_update_info_request_come_5ftogether_2eproto}, {
      &scc_info_access_token_come_5ftogether_2eproto.base,
      &scc_info_marker_info_come_5ftogether_2eproto.base,
      &scc_info_user_info_come_5ftogether_2eproto.base,}};

static void InitDefaultsscc_info_update_info_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_update_info_response_default_instance_;
    new (ptr) ::come_together_grpc::update_info_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::update_info_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_update_info_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_update_info_response_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_user_info_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_user_info_default_instance_;
    new (ptr) ::come_together_grpc::user_info();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::user_info::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_user_info_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_user_info_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_verify_token_request_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_verify_token_request_default_instance_;
    new (ptr) ::come_together_grpc::verify_token_request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::verify_token_request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_verify_token_request_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_verify_token_request_come_5ftogether_2eproto}, {}};

static void InitDefaultsscc_info_verify_token_response_come_5ftogether_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::come_together_grpc::_verify_token_response_default_instance_;
    new (ptr) ::come_together_grpc::verify_token_response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::come_together_grpc::verify_token_response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_verify_token_response_come_5ftogether_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_verify_token_response_come_5ftogether_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_come_5ftogether_2eproto[36];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_come_5ftogether_2eproto[22];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_come_5ftogether_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_come_5ftogether_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::image, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::image, data_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::image, uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::image, sequence_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::access_token, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::access_token, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::application_id, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::application_id, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::logout_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::logout_request, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::logout_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::logout_response, res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_push_token_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_push_token_request, app_id_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_push_token_request, push_token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_push_token_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_push_token_response, res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::delete_marker_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::delete_marker_request, token_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::delete_marker_request, marker_uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::delete_marker_reponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::delete_marker_reponse, res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::ask_token_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::ask_token_request, email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::ask_token_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::ask_token_response, res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::verify_token_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::verify_token_request, email_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::verify_token_request, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::verify_token_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::verify_token_response, res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::update_info_request, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::update_info_request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::update_info_request, token_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::update_info_request, type_),
  offsetof(::come_together_grpc::update_info_requestDefaultTypeInternal, m_info_),
  offsetof(::come_together_grpc::update_info_requestDefaultTypeInternal, u_info_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::update_info_request, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::update_info_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::update_info_response, res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::event, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::event, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::event, event_type_),
  offsetof(::come_together_grpc::eventDefaultTypeInternal, m_info_),
  offsetof(::come_together_grpc::eventDefaultTypeInternal, c_message_),
  offsetof(::come_together_grpc::eventDefaultTypeInternal, u_info_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::event, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_info, uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_info, title_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_info, participants_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_info, last_visible_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_chat_messages_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_chat_messages_request, token_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_chat_messages_request, chat_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_chat_messages_request, page_size_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_chat_messages_request, page_number_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_chat_messages_request, hash_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_message, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_message, content_type_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_message, sender_uuid_),
  offsetof(::come_together_grpc::chat_messageDefaultTypeInternal, text_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_message, sent_unix_time_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_message, chat_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_message, sequence_number_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_message, uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::chat_message, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_chat_message_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_chat_message_request, token_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_chat_message_request, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_chat_message_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_chat_message_response, res_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_chat_message_response, actual_sequence_number_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::send_chat_message_response, message_uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_info_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_info_request, info_type_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_info_request, token_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_info_request, target_uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_info_response, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_info_response, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::come_together_grpc::get_info_responseDefaultTypeInternal, u_info_),
  offsetof(::come_together_grpc::get_info_responseDefaultTypeInternal, m_info_),
  offsetof(::come_together_grpc::get_info_responseDefaultTypeInternal, c_info_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_info_response, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_images_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_images_request, image_type_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_images_request, target_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_images_request, token_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_images_request, amount_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_images_request, hash_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::get_images_request, starting_sequence_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_request, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_request, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_request, act_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_request, token_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_request, target_uuid_),
  offsetof(::come_together_grpc::manage_image_requestDefaultTypeInternal, image_),
  offsetof(::come_together_grpc::manage_image_requestDefaultTypeInternal, image_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_request, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_response, res_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_response, image_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::manage_image_response, image_sequence_number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::check_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::check_request, check_type_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::check_request, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::check_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::check_response, res_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_request, typ_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_request, login_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_request, password_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_request, token_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_request, app_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_response, res_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_response, info_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::login_response, token_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::register_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::register_request, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::register_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::register_response, res_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::register_response, user_uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::user_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::user_info, uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::user_info, email_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::user_info, login_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::user_info, password_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::user_info, first_name_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::user_info, last_name_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::user_info, images_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::user_info, other_info_json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, cat_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, marker_type_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, from_unix_time_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, to_unix_time_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, creation_unix_time_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, creator_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, display_name_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, latitude_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, longitude_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, chat_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, images_uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::marker_info, other_data_json_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::add_marker_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::add_marker_request, info_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::add_marker_response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::add_marker_response, res_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::add_marker_response, uuid_),
  PROTOBUF_FIELD_OFFSET(::come_together_grpc::add_marker_response, chat_uuid_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::come_together_grpc::image)},
  { 8, -1, sizeof(::come_together_grpc::access_token)},
  { 14, -1, sizeof(::come_together_grpc::application_id)},
  { 20, -1, sizeof(::come_together_grpc::logout_request)},
  { 26, -1, sizeof(::come_together_grpc::logout_response)},
  { 32, -1, sizeof(::come_together_grpc::send_push_token_request)},
  { 39, -1, sizeof(::come_together_grpc::send_push_token_response)},
  { 45, -1, sizeof(::come_together_grpc::delete_marker_request)},
  { 52, -1, sizeof(::come_together_grpc::delete_marker_reponse)},
  { 58, -1, sizeof(::come_together_grpc::ask_token_request)},
  { 64, -1, sizeof(::come_together_grpc::ask_token_response)},
  { 70, -1, sizeof(::come_together_grpc::verify_token_request)},
  { 77, -1, sizeof(::come_together_grpc::verify_token_response)},
  { 83, -1, sizeof(::come_together_grpc::update_info_request)},
  { 93, -1, sizeof(::come_together_grpc::update_info_response)},
  { 99, -1, sizeof(::come_together_grpc::event)},
  { 109, -1, sizeof(::come_together_grpc::chat_info)},
  { 118, -1, sizeof(::come_together_grpc::get_chat_messages_request)},
  { 128, -1, sizeof(::come_together_grpc::chat_message)},
  { 141, -1, sizeof(::come_together_grpc::send_chat_message_request)},
  { 148, -1, sizeof(::come_together_grpc::send_chat_message_response)},
  { 156, -1, sizeof(::come_together_grpc::get_info_request)},
  { 164, -1, sizeof(::come_together_grpc::get_info_response)},
  { 173, -1, sizeof(::come_together_grpc::get_images_request)},
  { 184, -1, sizeof(::come_together_grpc::manage_image_request)},
  { 195, -1, sizeof(::come_together_grpc::manage_image_response)},
  { 203, -1, sizeof(::come_together_grpc::check_request)},
  { 210, -1, sizeof(::come_together_grpc::check_response)},
  { 216, -1, sizeof(::come_together_grpc::login_request)},
  { 226, -1, sizeof(::come_together_grpc::login_response)},
  { 234, -1, sizeof(::come_together_grpc::register_request)},
  { 240, -1, sizeof(::come_together_grpc::register_response)},
  { 247, -1, sizeof(::come_together_grpc::user_info)},
  { 260, -1, sizeof(::come_together_grpc::marker_info)},
  { 278, -1, sizeof(::come_together_grpc::add_marker_request)},
  { 284, -1, sizeof(::come_together_grpc::add_marker_response)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_image_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_access_token_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_application_id_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_logout_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_logout_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_send_push_token_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_send_push_token_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_delete_marker_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_delete_marker_reponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_ask_token_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_ask_token_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_verify_token_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_verify_token_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_update_info_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_update_info_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_event_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_chat_info_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_get_chat_messages_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_chat_message_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_send_chat_message_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_send_chat_message_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_get_info_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_get_info_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_get_images_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_manage_image_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_manage_image_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_check_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_check_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_login_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_login_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_register_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_register_response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_user_info_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_marker_info_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_add_marker_request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::come_together_grpc::_add_marker_response_default_instance_),
};

const char descriptor_table_protodef_come_5ftogether_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023come_together.proto\022\022come_together_grp"
  "c\"<\n\005image\022\014\n\004data\030\001 \001(\014\022\014\n\004uuid\030\002 \001(\t\022\027"
  "\n\017sequence_number\030\003 \001(\005\"\035\n\014access_token\022"
  "\r\n\005value\030\001 \001(\t\"\034\n\016application_id\022\n\n\002id\030\001"
  " \001(\t\"A\n\016logout_request\022/\n\005token\030\001 \001(\0132 ."
  "come_together_grpc.access_token\"\212\001\n\017logo"
  "ut_response\0227\n\003res\030\001 \001(\0162*.come_together"
  "_grpc.logout_response.result\">\n\006result\022\013"
  "\n\007NOT_SET\020\000\022\006\n\002OK\020\001\022\023\n\017TOKEN_NOT_FOUND\020\002"
  "\022\n\n\005OTHER\020\347\007\"a\n\027send_push_token_request\022"
  "2\n\006app_id\030\001 \001(\0132\".come_together_grpc.app"
  "lication_id\022\022\n\npush_token\030\002 \001(\t\"\236\001\n\030send"
  "_push_token_response\022@\n\003res\030\001 \001(\01623.come"
  "_together_grpc.send_push_token_response."
  "result\"@\n\006result\022\013\n\007NOT_SET\020\000\022\006\n\002OK\020\001\022\026\n"
  "\022USER_NOT_LOGGED_IN\020\002\022\t\n\005OTHER\020\003\"]\n\025dele"
  "te_marker_request\022/\n\005token\030\001 \001(\0132 .come_"
  "together_grpc.access_token\022\023\n\013marker_uui"
  "d\030\002 \001(\t\"\264\001\n\025delete_marker_reponse\022=\n\003res"
  "\030\001 \001(\01620.come_together_grpc.delete_marke"
  "r_reponse.result\"\\\n\006result\022\013\n\007NOT_SET\020\000\022"
  "\006\n\002OK\020\001\022\033\n\027INSUFFICIENT_PERMISIONS\020\002\022\024\n\020"
  "MARKER_NOT_FOUND\020\003\022\n\n\005OTHER\020\347\007\"\"\n\021ask_to"
  "ken_request\022\r\n\005email\030\001 \001(\t\"\222\001\n\022ask_token"
  "_response\022:\n\003res\030\001 \001(\0162-.come_together_g"
  "rpc.ask_token_response.result\"@\n\006result\022"
  "\013\n\007NOT_SET\020\000\022\006\n\002OK\020\001\022\025\n\021MAIL_WAS_NOT_SEN"
  "T\020\002\022\n\n\005OTHER\020\347\007\"4\n\024verify_token_request\022"
  "\r\n\005email\030\001 \001(\t\022\r\n\005token\030\002 \001(\t\"\247\001\n\025verify"
  "_token_response\022=\n\003res\030\001 \001(\01620.come_toge"
  "ther_grpc.verify_token_response.result\"O"
  "\n\006result\022\013\n\007NOT_SET\020\000\022\006\n\002OK\020\001\022\023\n\017EMAIL_N"
  "OT_FOUND\020\002\022\017\n\013WRONG_TOKEN\020\003\022\n\n\005OTHER\020\347\007\""
  "\247\002\n\023update_info_request\022/\n\005token\030\001 \001(\0132 "
  ".come_together_grpc.access_token\022A\n\004type"
  "\030\002 \001(\01623.come_together_grpc.update_info_"
  "request.update_type\0221\n\006m_info\030\003 \001(\0132\037.co"
  "me_together_grpc.marker_infoH\000\022/\n\006u_info"
  "\030\004 \001(\0132\035.come_together_grpc.user_infoH\000\""
  "0\n\013update_type\022\013\n\007NOT_SET\020\000\022\n\n\006MARKER\020\001\022"
  "\010\n\004USER\020\002B\006\n\004data\"\234\001\n\024update_info_respon"
  "se\022<\n\003res\030\001 \001(\0162/.come_together_grpc.upd"
  "ate_info_response.result\"F\n\006result\022\013\n\007NO"
  "T_SET\020\000\022\006\n\002OK\020\001\022\033\n\027INSUFFICIENT_PERMISIO"
  "NS\020\002\022\n\n\005OTHER\020\347\007\"\242\003\n\005event\0222\n\nevent_type"
  "\030\001 \001(\0162\036.come_together_grpc.event.type\0221"
  "\n\006m_info\030\002 \001(\0132\037.come_together_grpc.mark"
  "er_infoH\000\0225\n\tc_message\030\003 \001(\0132 .come_toge"
  "ther_grpc.chat_messageH\000\022/\n\006u_info\030\004 \001(\013"
  "2\035.come_together_grpc.user_infoH\000\"\301\001\n\004ty"
  "pe\022\013\n\007NOT_SET\020\000\022\020\n\014MARKER_ADDED\020\001\022\021\n\rMAR"
  "KER_EDITED\020\002\022\032\n\026MARKER_DELETED_BY_USER\020\003"
  "\022\035\n\031MARKER_DELETED_BY_TIMEOUT\020\004\022\021\n\rMESSA"
  "GE_ADDED\020\005\022\022\n\016MESSAGE_EDITED\020\006\022\023\n\017MESSAG"
  "E_DELETED\020\007\022\020\n\014USER_UPDATED\020\010B\006\n\004data\"a\n"
  "\tchat_info\022\014\n\004uuid\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022"
  "\031\n\021participants_uuid\030\003 \003(\t\022\034\n\024last_visib"
  "le_message\030\004 \001(\t\"s\n\031get_chat_messages_re"
  "quest\022\r\n\005token\030\001 \001(\t\022\021\n\tchat_uuid\030\002 \001(\t\022"
  "\021\n\tpage_size\030\003 \001(\005\022\023\n\013page_number\030\004 \001(\005\022"
  "\014\n\004hash\030\005 \001(\t\"\202\002\n\014chat_message\022F\n\014conten"
  "t_type\030\001 \001(\01620.come_together_grpc.chat_m"
  "essage.message_content\022\023\n\013sender_uuid\030\002 "
  "\001(\t\022\016\n\004text\030\003 \001(\tH\000\022\026\n\016sent_unix_time\030\004 "
  "\001(\003\022\021\n\tchat_uuid\030\005 \001(\t\022\027\n\017sequence_numbe"
  "r\030\006 \001(\003\022\014\n\004uuid\030\007 \001(\t\"(\n\017message_content"
  "\022\013\n\007NOT_SET\020\000\022\010\n\004TEXT\020\001B\t\n\007content\"\177\n\031se"
  "nd_chat_message_request\022/\n\005token\030\001 \001(\0132 "
  ".come_together_grpc.access_token\0221\n\007mess"
  "age\030\002 \001(\0132 .come_together_grpc.chat_mess"
  "age\"\220\002\n\032send_chat_message_response\022B\n\003re"
  "s\030\001 \001(\01625.come_together_grpc.send_chat_m"
  "essage_response.result\022\036\n\026actual_sequenc"
  "e_number\030\002 \001(\003\022\024\n\014message_uuid\030\004 \001(\t\"x\n\006"
  "result\022\013\n\007NOT_SET\020\000\022\006\n\002OK\020\001\022\027\n\023CHAT_DOES"
  "_NOT_EXIST\020\002\022\027\n\023USER_DOES_NOT_EXIST\020\003\022\033\n"
  "\027INSUFFICIENT_PERMISIONS\020\004\022\n\n\005OTHER\020\347\007\"\251"
  "\001\n\020get_info_request\022<\n\tinfo_type\030\001 \001(\0162)"
  ".come_together_grpc.get_info_request.typ"
  "e\022\r\n\005token\030\002 \001(\t\022\023\n\013target_uuid\030\003 \001(\t\"3\n"
  "\004type\022\013\n\007NOT_SET\020\000\022\010\n\004USER\020\001\022\n\n\006MARKER\020\002"
  "\022\010\n\004CHAT\020\003\"\260\001\n\021get_info_response\022/\n\006u_in"
  "fo\030\001 \001(\0132\035.come_together_grpc.user_infoH"
  "\000\0221\n\006m_info\030\002 \001(\0132\037.come_together_grpc.m"
  "arker_infoH\000\022/\n\006c_info\030\003 \001(\0132\035.come_toge"
  "ther_grpc.chat_infoH\000B\006\n\004data\"\206\002\n\022get_im"
  "ages_request\022\?\n\nimage_type\030\001 \001(\0162+.come_"
  "together_grpc.get_images_request.type\022\023\n"
  "\013target_uuid\030\002 \001(\t\022/\n\005token\030\003 \001(\0132 .come"
  "_together_grpc.access_token\022\016\n\006amount\030\004 "
  "\001(\005\022\014\n\004hash\030\005 \001(\t\022 \n\030starting_sequence_n"
  "umber\030\006 \001(\005\")\n\004type\022\013\n\007NOT_SET\020\000\022\010\n\004USER"
  "\020\001\022\n\n\006MARKER\020\002\"\300\002\n\024manage_image_request\022"
  "<\n\003act\030\001 \001(\0162/.come_together_grpc.manage"
  "_image_request.action\022/\n\005token\030\002 \001(\0132 .c"
  "ome_together_grpc.access_token\022\023\n\013target"
  "_uuid\030\003 \001(\t\022\017\n\005image\030\004 \001(\014H\000\022\024\n\nimage_uu"
  "id\030\005 \001(\tH\000\"u\n\006action\022\013\n\007NOT_SET\020\000\022\025\n\021UPL"
  "OAD_USER_IMAGE\020\001\022\025\n\021DELETE_USER_IMAGE\020\002\022"
  "\027\n\023UPLOAD_MARKER_IMAGE\020\003\022\027\n\023DELETE_MARKE"
  "R_IMAGE\020\004B\006\n\004data\"\321\001\n\025manage_image_respo"
  "nse\022=\n\003res\030\001 \001(\01620.come_together_grpc.ma"
  "nage_image_response.result\022\022\n\nimage_uuid"
  "\030\002 \001(\t\022\035\n\025image_sequence_number\030\003 \001(\005\"F\n"
  "\006result\022\013\n\007NOT_SET\020\000\022\006\n\002OK\020\001\022\033\n\027INSUFFIC"
  "IENT_PERMISIONS\020\002\022\n\n\005OTHER\020\347\007\"\204\001\n\rcheck_"
  "request\022:\n\ncheck_type\030\001 \001(\0162&.come_toget"
  "her_grpc.check_request.type\022\014\n\004data\030\002 \001("
  "\t\")\n\004type\022\013\n\007NOT_SET\020\000\022\t\n\005EMAIL\020\001\022\t\n\005LOG"
  "IN\020\002\"\205\001\n\016check_response\0226\n\003res\030\001 \001(\0162).c"
  "ome_together_grpc.check_response.result\""
  ";\n\006result\022\013\n\007NOT_SET\020\000\022\r\n\tAVAILABLE\020\001\022\t\n"
  "\005TAKEN\020\002\022\n\n\005OTHER\020\347\007\"\213\002\n\rlogin_request\0223"
  "\n\003typ\030\001 \001(\0162&.come_together_grpc.login_r"
  "equest.type\022\r\n\005login\030\002 \001(\t\022\020\n\010password\030\003"
  " \001(\t\022/\n\005token\030\004 \001(\0132 .come_together_grpc"
  ".access_token\0222\n\006app_id\030\005 \001(\0132\".come_tog"
  "ether_grpc.application_id\"\?\n\004type\022\013\n\007NOT"
  "_SET\020\000\022\025\n\021BY_LOGIN_PASSWORD\020\001\022\023\n\017BY_ACCE"
  "SS_TOKEN\020\002\"\225\002\n\016login_response\0226\n\003res\030\001 \001"
  "(\0162).come_together_grpc.login_response.r"
  "esult\022+\n\004info\030\002 \001(\0132\035.come_together_grpc"
  ".user_info\022/\n\005token\030\003 \001(\0132 .come_togethe"
  "r_grpc.access_token\"m\n\006result\022\013\n\007NOT_SET"
  "\020\000\022\006\n\002OK\020\001\022\022\n\016USER_NOT_FOUND\020\002\022\022\n\016WRONG_"
  "PASSWORD\020\003\022\032\n\026ACCESS_TOKEN_NOT_FOUND\020\004\022\n"
  "\n\005OTHER\020\347\007\"\?\n\020register_request\022+\n\004info\030\001"
  " \001(\0132\035.come_together_grpc.user_info\"\276\001\n\021"
  "register_response\0229\n\003res\030\001 \001(\0162,.come_to"
  "gether_grpc.register_response.result\022\021\n\t"
  "user_uuid\030\002 \001(\t\"[\n\006result\022\013\n\007NOT_SET\020\000\022\006"
  "\n\002OK\020\001\022\027\n\023EMAIL_ALREADY_TAKEN\020\002\022\027\n\023LOGIN"
  "_ALREADY_TAKEN\020\003\022\n\n\005OTHER\020\347\007\"\236\001\n\tuser_in"
  "fo\022\014\n\004uuid\030\001 \001(\t\022\r\n\005email\030\002 \001(\t\022\r\n\005login"
  "\030\003 \001(\t\022\020\n\010password\030\004 \001(\t\022\022\n\nfirst_name\030\005"
  " \001(\t\022\021\n\tlast_name\030\006 \001(\t\022\023\n\013images_uuid\030\007"
  " \003(\t\022\027\n\017other_info_json\030\010 \001(\t\"\234\005\n\013marker"
  "_info\0225\n\003cat\030\001 \001(\0162(.come_together_grpc."
  "marker_info.category\0229\n\013marker_type\030\002 \001("
  "\0162$.come_together_grpc.marker_info.type\022"
  "\026\n\016from_unix_time\030\003 \001(\003\022\024\n\014to_unix_time\030"
  "\004 \001(\003\022\032\n\022creation_unix_time\030\005 \001(\003\022\024\n\014cre"
  "ator_uuid\030\006 \001(\t\022\024\n\014display_name\030\007 \001(\t\022\020\n"
  "\010latitude\030\t \001(\001\022\021\n\tlongitude\030\n \001(\001\022\014\n\004uu"
  "id\030\013 \001(\t\022\021\n\tchat_uuid\030\014 \001(\t\022\023\n\013images_uu"
  "id\030\r \003(\t\022\027\n\017other_data_json\030\016 \001(\t\"\367\001\n\010ca"
  "tegory\022\013\n\007NOT_SET\020\000\022\013\n\007CYCLING\020\001\022\014\n\010FOOT"
  "BALL\020\002\022\016\n\nBASKETBALL\020\003\022\013\n\007RUNNING\020\004\022\007\n\003G"
  "YM\020\005\022\013\n\007GALLERY\020\006\022\r\n\tEXCURSION\020\007\022\013\n\007THEA"
  "TER\020\010\022\n\n\006CINEMA\020\t\022\007\n\003BAR\020\n\022\016\n\nRESTAURANT"
  "\020\013\022\016\n\nNIGTH_CLUB\020\014\022\n\n\006HOOKAH\020\r\022\010\n\004CAFE\020\016"
  "\022\010\n\004WALK\020\017\022\013\n\007CONCERT\020\020\022\t\n\005QUEST\020\021\022\007\n\003ZO"
  "O\020\022\"7\n\004type\022\027\n\023NOT_SET_MARKER_TYPE\020\000\022\013\n\007"
  "PRIVATE\020\001\022\t\n\005GROUP\020\002\"C\n\022add_marker_reque"
  "st\022-\n\004info\030\001 \001(\0132\037.come_together_grpc.ma"
  "rker_info\"\327\001\n\023add_marker_response\022;\n\003res"
  "\030\001 \001(\0162..come_together_grpc.add_marker_r"
  "esponse.result\022\014\n\004uuid\030\002 \001(\t\022\021\n\tchat_uui"
  "d\030\003 \001(\t\"b\n\006result\022\013\n\007NOT_SET\020\000\022\006\n\002OK\020\001\022\033"
  "\n\027TIME_INTERVAL_TOO_SMALL\020\002\022\032\n\026CREATION_"
  "TIME_OUTDATED\020\003\022\n\n\005OTHER\020\347\0072\352\014\n\014MainEndp"
  "oint\022[\n\010AskToken\022%.come_together_grpc.as"
  "k_token_request\032&.come_together_grpc.ask"
  "_token_response\"\000\022d\n\013VerifyToken\022(.come_"
  "together_grpc.verify_token_request\032).com"
  "e_together_grpc.verify_token_response\"\000\022"
  "P\n\005Check\022!.come_together_grpc.check_requ"
  "est\032\".come_together_grpc.check_response\""
  "\000\022]\n\014RegisterUser\022$.come_together_grpc.r"
  "egister_request\032%.come_together_grpc.reg"
  "ister_response\"\000\022T\n\tLoginUser\022!.come_tog"
  "ether_grpc.login_request\032\".come_together"
  "_grpc.login_response\"\000\022W\n\nLogoutUser\022\".c"
  "ome_together_grpc.logout_request\032#.come_"
  "together_grpc.logout_response\"\000\022^\n\tAddMa"
  "rker\022&.come_together_grpc.add_marker_req"
  "uest\032\'.come_together_grpc.add_marker_res"
  "ponse\"\000\022f\n\014DeleteMarker\022).come_together_"
  "grpc.delete_marker_request\032).come_togeth"
  "er_grpc.delete_marker_reponse\"\000\022V\n\rGetAl"
  "lMarkers\022 .come_together_grpc.access_tok"
  "en\032\037.come_together_grpc.marker_info\"\0000\001\022"
  "X\n\007GetInfo\022$.come_together_grpc.get_info"
  "_request\032%.come_together_grpc.get_info_r"
  "esponse\"\000\022a\n\nUpdateInfo\022\'.come_together_"
  "grpc.update_info_request\032(.come_together"
  "_grpc.update_info_response\"\000\022d\n\013ManageIm"
  "age\022(.come_together_grpc.manage_image_re"
  "quest\032).come_together_grpc.manage_image_"
  "response\"\000\022R\n\tGetImages\022&.come_together_"
  "grpc.get_images_request\032\031.come_together_"
  "grpc.image\"\0000\001\022r\n\017SendChatMessage\022-.come"
  "_together_grpc.send_chat_message_request"
  "\032..come_together_grpc.send_chat_message_"
  "response\"\000\022f\n\017GetChatMessages\022-.come_tog"
  "ether_grpc.get_chat_messages_request\032 .c"
  "ome_together_grpc.chat_message\"\0000\001\022V\n\021Su"
  "bscribeToEvents\022\".come_together_grpc.app"
  "lication_id\032\031.come_together_grpc.event\"\000"
  "0\001\022l\n\rSendPushToken\022+.come_together_grpc"
  ".send_push_token_request\032,.come_together"
  "_grpc.send_push_token_response\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_come_5ftogether_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_come_5ftogether_2eproto_sccs[36] = {
  &scc_info_access_token_come_5ftogether_2eproto.base,
  &scc_info_add_marker_request_come_5ftogether_2eproto.base,
  &scc_info_add_marker_response_come_5ftogether_2eproto.base,
  &scc_info_application_id_come_5ftogether_2eproto.base,
  &scc_info_ask_token_request_come_5ftogether_2eproto.base,
  &scc_info_ask_token_response_come_5ftogether_2eproto.base,
  &scc_info_chat_info_come_5ftogether_2eproto.base,
  &scc_info_chat_message_come_5ftogether_2eproto.base,
  &scc_info_check_request_come_5ftogether_2eproto.base,
  &scc_info_check_response_come_5ftogether_2eproto.base,
  &scc_info_delete_marker_reponse_come_5ftogether_2eproto.base,
  &scc_info_delete_marker_request_come_5ftogether_2eproto.base,
  &scc_info_event_come_5ftogether_2eproto.base,
  &scc_info_get_chat_messages_request_come_5ftogether_2eproto.base,
  &scc_info_get_images_request_come_5ftogether_2eproto.base,
  &scc_info_get_info_request_come_5ftogether_2eproto.base,
  &scc_info_get_info_response_come_5ftogether_2eproto.base,
  &scc_info_image_come_5ftogether_2eproto.base,
  &scc_info_login_request_come_5ftogether_2eproto.base,
  &scc_info_login_response_come_5ftogether_2eproto.base,
  &scc_info_logout_request_come_5ftogether_2eproto.base,
  &scc_info_logout_response_come_5ftogether_2eproto.base,
  &scc_info_manage_image_request_come_5ftogether_2eproto.base,
  &scc_info_manage_image_response_come_5ftogether_2eproto.base,
  &scc_info_marker_info_come_5ftogether_2eproto.base,
  &scc_info_register_request_come_5ftogether_2eproto.base,
  &scc_info_register_response_come_5ftogether_2eproto.base,
  &scc_info_send_chat_message_request_come_5ftogether_2eproto.base,
  &scc_info_send_chat_message_response_come_5ftogether_2eproto.base,
  &scc_info_send_push_token_request_come_5ftogether_2eproto.base,
  &scc_info_send_push_token_response_come_5ftogether_2eproto.base,
  &scc_info_update_info_request_come_5ftogether_2eproto.base,
  &scc_info_update_info_response_come_5ftogether_2eproto.base,
  &scc_info_user_info_come_5ftogether_2eproto.base,
  &scc_info_verify_token_request_come_5ftogether_2eproto.base,
  &scc_info_verify_token_response_come_5ftogether_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_come_5ftogether_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_come_5ftogether_2eproto = {
  false, false, descriptor_table_protodef_come_5ftogether_2eproto, "come_together.proto", 8080,
  &descriptor_table_come_5ftogether_2eproto_once, descriptor_table_come_5ftogether_2eproto_sccs, descriptor_table_come_5ftogether_2eproto_deps, 36, 0,
  schemas, file_default_instances, TableStruct_come_5ftogether_2eproto::offsets,
  file_level_metadata_come_5ftogether_2eproto, 36, file_level_enum_descriptors_come_5ftogether_2eproto, file_level_service_descriptors_come_5ftogether_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_come_5ftogether_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_come_5ftogether_2eproto)), true);
namespace come_together_grpc {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* logout_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[0];
}
bool logout_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr logout_response_result logout_response::NOT_SET;
constexpr logout_response_result logout_response::OK;
constexpr logout_response_result logout_response::TOKEN_NOT_FOUND;
constexpr logout_response_result logout_response::OTHER;
constexpr logout_response_result logout_response::result_MIN;
constexpr logout_response_result logout_response::result_MAX;
constexpr int logout_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* send_push_token_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[1];
}
bool send_push_token_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr send_push_token_response_result send_push_token_response::NOT_SET;
constexpr send_push_token_response_result send_push_token_response::OK;
constexpr send_push_token_response_result send_push_token_response::USER_NOT_LOGGED_IN;
constexpr send_push_token_response_result send_push_token_response::OTHER;
constexpr send_push_token_response_result send_push_token_response::result_MIN;
constexpr send_push_token_response_result send_push_token_response::result_MAX;
constexpr int send_push_token_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* delete_marker_reponse_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[2];
}
bool delete_marker_reponse_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr delete_marker_reponse_result delete_marker_reponse::NOT_SET;
constexpr delete_marker_reponse_result delete_marker_reponse::OK;
constexpr delete_marker_reponse_result delete_marker_reponse::INSUFFICIENT_PERMISIONS;
constexpr delete_marker_reponse_result delete_marker_reponse::MARKER_NOT_FOUND;
constexpr delete_marker_reponse_result delete_marker_reponse::OTHER;
constexpr delete_marker_reponse_result delete_marker_reponse::result_MIN;
constexpr delete_marker_reponse_result delete_marker_reponse::result_MAX;
constexpr int delete_marker_reponse::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ask_token_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[3];
}
bool ask_token_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ask_token_response_result ask_token_response::NOT_SET;
constexpr ask_token_response_result ask_token_response::OK;
constexpr ask_token_response_result ask_token_response::MAIL_WAS_NOT_SENT;
constexpr ask_token_response_result ask_token_response::OTHER;
constexpr ask_token_response_result ask_token_response::result_MIN;
constexpr ask_token_response_result ask_token_response::result_MAX;
constexpr int ask_token_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* verify_token_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[4];
}
bool verify_token_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr verify_token_response_result verify_token_response::NOT_SET;
constexpr verify_token_response_result verify_token_response::OK;
constexpr verify_token_response_result verify_token_response::EMAIL_NOT_FOUND;
constexpr verify_token_response_result verify_token_response::WRONG_TOKEN;
constexpr verify_token_response_result verify_token_response::OTHER;
constexpr verify_token_response_result verify_token_response::result_MIN;
constexpr verify_token_response_result verify_token_response::result_MAX;
constexpr int verify_token_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* update_info_request_update_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[5];
}
bool update_info_request_update_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr update_info_request_update_type update_info_request::NOT_SET;
constexpr update_info_request_update_type update_info_request::MARKER;
constexpr update_info_request_update_type update_info_request::USER;
constexpr update_info_request_update_type update_info_request::update_type_MIN;
constexpr update_info_request_update_type update_info_request::update_type_MAX;
constexpr int update_info_request::update_type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* update_info_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[6];
}
bool update_info_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr update_info_response_result update_info_response::NOT_SET;
constexpr update_info_response_result update_info_response::OK;
constexpr update_info_response_result update_info_response::INSUFFICIENT_PERMISIONS;
constexpr update_info_response_result update_info_response::OTHER;
constexpr update_info_response_result update_info_response::result_MIN;
constexpr update_info_response_result update_info_response::result_MAX;
constexpr int update_info_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* event_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[7];
}
bool event_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr event_type event::NOT_SET;
constexpr event_type event::MARKER_ADDED;
constexpr event_type event::MARKER_EDITED;
constexpr event_type event::MARKER_DELETED_BY_USER;
constexpr event_type event::MARKER_DELETED_BY_TIMEOUT;
constexpr event_type event::MESSAGE_ADDED;
constexpr event_type event::MESSAGE_EDITED;
constexpr event_type event::MESSAGE_DELETED;
constexpr event_type event::USER_UPDATED;
constexpr event_type event::type_MIN;
constexpr event_type event::type_MAX;
constexpr int event::type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* chat_message_message_content_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[8];
}
bool chat_message_message_content_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr chat_message_message_content chat_message::NOT_SET;
constexpr chat_message_message_content chat_message::TEXT;
constexpr chat_message_message_content chat_message::message_content_MIN;
constexpr chat_message_message_content chat_message::message_content_MAX;
constexpr int chat_message::message_content_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* send_chat_message_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[9];
}
bool send_chat_message_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr send_chat_message_response_result send_chat_message_response::NOT_SET;
constexpr send_chat_message_response_result send_chat_message_response::OK;
constexpr send_chat_message_response_result send_chat_message_response::CHAT_DOES_NOT_EXIST;
constexpr send_chat_message_response_result send_chat_message_response::USER_DOES_NOT_EXIST;
constexpr send_chat_message_response_result send_chat_message_response::INSUFFICIENT_PERMISIONS;
constexpr send_chat_message_response_result send_chat_message_response::OTHER;
constexpr send_chat_message_response_result send_chat_message_response::result_MIN;
constexpr send_chat_message_response_result send_chat_message_response::result_MAX;
constexpr int send_chat_message_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* get_info_request_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[10];
}
bool get_info_request_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr get_info_request_type get_info_request::NOT_SET;
constexpr get_info_request_type get_info_request::USER;
constexpr get_info_request_type get_info_request::MARKER;
constexpr get_info_request_type get_info_request::CHAT;
constexpr get_info_request_type get_info_request::type_MIN;
constexpr get_info_request_type get_info_request::type_MAX;
constexpr int get_info_request::type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* get_images_request_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[11];
}
bool get_images_request_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr get_images_request_type get_images_request::NOT_SET;
constexpr get_images_request_type get_images_request::USER;
constexpr get_images_request_type get_images_request::MARKER;
constexpr get_images_request_type get_images_request::type_MIN;
constexpr get_images_request_type get_images_request::type_MAX;
constexpr int get_images_request::type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* manage_image_request_action_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[12];
}
bool manage_image_request_action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr manage_image_request_action manage_image_request::NOT_SET;
constexpr manage_image_request_action manage_image_request::UPLOAD_USER_IMAGE;
constexpr manage_image_request_action manage_image_request::DELETE_USER_IMAGE;
constexpr manage_image_request_action manage_image_request::UPLOAD_MARKER_IMAGE;
constexpr manage_image_request_action manage_image_request::DELETE_MARKER_IMAGE;
constexpr manage_image_request_action manage_image_request::action_MIN;
constexpr manage_image_request_action manage_image_request::action_MAX;
constexpr int manage_image_request::action_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* manage_image_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[13];
}
bool manage_image_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr manage_image_response_result manage_image_response::NOT_SET;
constexpr manage_image_response_result manage_image_response::OK;
constexpr manage_image_response_result manage_image_response::INSUFFICIENT_PERMISIONS;
constexpr manage_image_response_result manage_image_response::OTHER;
constexpr manage_image_response_result manage_image_response::result_MIN;
constexpr manage_image_response_result manage_image_response::result_MAX;
constexpr int manage_image_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* check_request_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[14];
}
bool check_request_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr check_request_type check_request::NOT_SET;
constexpr check_request_type check_request::EMAIL;
constexpr check_request_type check_request::LOGIN;
constexpr check_request_type check_request::type_MIN;
constexpr check_request_type check_request::type_MAX;
constexpr int check_request::type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* check_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[15];
}
bool check_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr check_response_result check_response::NOT_SET;
constexpr check_response_result check_response::AVAILABLE;
constexpr check_response_result check_response::TAKEN;
constexpr check_response_result check_response::OTHER;
constexpr check_response_result check_response::result_MIN;
constexpr check_response_result check_response::result_MAX;
constexpr int check_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* login_request_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[16];
}
bool login_request_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr login_request_type login_request::NOT_SET;
constexpr login_request_type login_request::BY_LOGIN_PASSWORD;
constexpr login_request_type login_request::BY_ACCESS_TOKEN;
constexpr login_request_type login_request::type_MIN;
constexpr login_request_type login_request::type_MAX;
constexpr int login_request::type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* login_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[17];
}
bool login_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr login_response_result login_response::NOT_SET;
constexpr login_response_result login_response::OK;
constexpr login_response_result login_response::USER_NOT_FOUND;
constexpr login_response_result login_response::WRONG_PASSWORD;
constexpr login_response_result login_response::ACCESS_TOKEN_NOT_FOUND;
constexpr login_response_result login_response::OTHER;
constexpr login_response_result login_response::result_MIN;
constexpr login_response_result login_response::result_MAX;
constexpr int login_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* register_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[18];
}
bool register_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr register_response_result register_response::NOT_SET;
constexpr register_response_result register_response::OK;
constexpr register_response_result register_response::EMAIL_ALREADY_TAKEN;
constexpr register_response_result register_response::LOGIN_ALREADY_TAKEN;
constexpr register_response_result register_response::OTHER;
constexpr register_response_result register_response::result_MIN;
constexpr register_response_result register_response::result_MAX;
constexpr int register_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* marker_info_category_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[19];
}
bool marker_info_category_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr marker_info_category marker_info::NOT_SET;
constexpr marker_info_category marker_info::CYCLING;
constexpr marker_info_category marker_info::FOOTBALL;
constexpr marker_info_category marker_info::BASKETBALL;
constexpr marker_info_category marker_info::RUNNING;
constexpr marker_info_category marker_info::GYM;
constexpr marker_info_category marker_info::GALLERY;
constexpr marker_info_category marker_info::EXCURSION;
constexpr marker_info_category marker_info::THEATER;
constexpr marker_info_category marker_info::CINEMA;
constexpr marker_info_category marker_info::BAR;
constexpr marker_info_category marker_info::RESTAURANT;
constexpr marker_info_category marker_info::NIGTH_CLUB;
constexpr marker_info_category marker_info::HOOKAH;
constexpr marker_info_category marker_info::CAFE;
constexpr marker_info_category marker_info::WALK;
constexpr marker_info_category marker_info::CONCERT;
constexpr marker_info_category marker_info::QUEST;
constexpr marker_info_category marker_info::ZOO;
constexpr marker_info_category marker_info::category_MIN;
constexpr marker_info_category marker_info::category_MAX;
constexpr int marker_info::category_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* marker_info_type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[20];
}
bool marker_info_type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr marker_info_type marker_info::NOT_SET_MARKER_TYPE;
constexpr marker_info_type marker_info::PRIVATE;
constexpr marker_info_type marker_info::GROUP;
constexpr marker_info_type marker_info::type_MIN;
constexpr marker_info_type marker_info::type_MAX;
constexpr int marker_info::type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* add_marker_response_result_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_come_5ftogether_2eproto);
  return file_level_enum_descriptors_come_5ftogether_2eproto[21];
}
bool add_marker_response_result_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 999:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr add_marker_response_result add_marker_response::NOT_SET;
constexpr add_marker_response_result add_marker_response::OK;
constexpr add_marker_response_result add_marker_response::TIME_INTERVAL_TOO_SMALL;
constexpr add_marker_response_result add_marker_response::CREATION_TIME_OUTDATED;
constexpr add_marker_response_result add_marker_response::OTHER;
constexpr add_marker_response_result add_marker_response::result_MIN;
constexpr add_marker_response_result add_marker_response::result_MAX;
constexpr int add_marker_response::result_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void image::InitAsDefaultInstance() {
}
class image::_Internal {
 public:
};

image::image(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.image)
}
image::image(const image& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uuid(),
      GetArena());
  }
  sequence_number_ = from.sequence_number_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.image)
}

void image::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_image_come_5ftogether_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sequence_number_ = 0;
}

image::~image() {
  // @@protoc_insertion_point(destructor:come_together_grpc.image)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void image::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void image::ArenaDtor(void* object) {
  image* _this = reinterpret_cast< image* >(object);
  (void)_this;
}
void image::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void image::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const image& image::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_image_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void image::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.image)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sequence_number_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* image::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.image.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sequence_number = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          sequence_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* image::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.image)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.image.uuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uuid(), target);
  }

  // int32 sequence_number = 3;
  if (this->sequence_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_sequence_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.image)
  return target;
}

size_t image::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.image)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // int32 sequence_number = 3;
  if (this->sequence_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sequence_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void image::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.image)
  GOOGLE_DCHECK_NE(&from, this);
  const image* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<image>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.image)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.image)
    MergeFrom(*source);
  }
}

void image::MergeFrom(const image& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.image)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.sequence_number() != 0) {
    _internal_set_sequence_number(from._internal_sequence_number());
  }
}

void image::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void image::CopyFrom(const image& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.image)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool image::IsInitialized() const {
  return true;
}

void image::InternalSwap(image* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(sequence_number_, other->sequence_number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata image::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void access_token::InitAsDefaultInstance() {
}
class access_token::_Internal {
 public:
};

access_token::access_token(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.access_token)
}
access_token::access_token(const access_token& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.access_token)
}

void access_token::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_access_token_come_5ftogether_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

access_token::~access_token() {
  // @@protoc_insertion_point(destructor:come_together_grpc.access_token)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void access_token::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void access_token::ArenaDtor(void* object) {
  access_token* _this = reinterpret_cast< access_token* >(object);
  (void)_this;
}
void access_token::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void access_token::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const access_token& access_token::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_access_token_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void access_token::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.access_token)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* access_token::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.access_token.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* access_token::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.access_token)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.access_token.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.access_token)
  return target;
}

size_t access_token::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.access_token)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void access_token::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.access_token)
  GOOGLE_DCHECK_NE(&from, this);
  const access_token* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<access_token>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.access_token)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.access_token)
    MergeFrom(*source);
  }
}

void access_token::MergeFrom(const access_token& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.access_token)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void access_token::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.access_token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void access_token::CopyFrom(const access_token& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.access_token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool access_token::IsInitialized() const {
  return true;
}

void access_token::InternalSwap(access_token* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata access_token::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void application_id::InitAsDefaultInstance() {
}
class application_id::_Internal {
 public:
};

application_id::application_id(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.application_id)
}
application_id::application_id(const application_id& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.application_id)
}

void application_id::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_application_id_come_5ftogether_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

application_id::~application_id() {
  // @@protoc_insertion_point(destructor:come_together_grpc.application_id)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void application_id::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void application_id::ArenaDtor(void* object) {
  application_id* _this = reinterpret_cast< application_id* >(object);
  (void)_this;
}
void application_id::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void application_id::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const application_id& application_id::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_application_id_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void application_id::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.application_id)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* application_id::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.application_id.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* application_id::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.application_id)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.application_id.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.application_id)
  return target;
}

size_t application_id::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.application_id)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void application_id::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.application_id)
  GOOGLE_DCHECK_NE(&from, this);
  const application_id* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<application_id>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.application_id)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.application_id)
    MergeFrom(*source);
  }
}

void application_id::MergeFrom(const application_id& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.application_id)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void application_id::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.application_id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void application_id::CopyFrom(const application_id& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.application_id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool application_id::IsInitialized() const {
  return true;
}

void application_id::InternalSwap(application_id* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata application_id::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void logout_request::InitAsDefaultInstance() {
  ::come_together_grpc::_logout_request_default_instance_._instance.get_mutable()->token_ = const_cast< ::come_together_grpc::access_token*>(
      ::come_together_grpc::access_token::internal_default_instance());
}
class logout_request::_Internal {
 public:
  static const ::come_together_grpc::access_token& token(const logout_request* msg);
};

const ::come_together_grpc::access_token&
logout_request::_Internal::token(const logout_request* msg) {
  return *msg->token_;
}
logout_request::logout_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.logout_request)
}
logout_request::logout_request(const logout_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_token()) {
    token_ = new ::come_together_grpc::access_token(*from.token_);
  } else {
    token_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.logout_request)
}

void logout_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_logout_request_come_5ftogether_2eproto.base);
  token_ = nullptr;
}

logout_request::~logout_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.logout_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void logout_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete token_;
}

void logout_request::ArenaDtor(void* object) {
  logout_request* _this = reinterpret_cast< logout_request* >(object);
  (void)_this;
}
void logout_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void logout_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const logout_request& logout_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_logout_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void logout_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.logout_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* logout_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.access_token token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* logout_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.logout_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.access_token token = 1;
  if (this->has_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::token(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.logout_request)
  return target;
}

size_t logout_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.logout_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.access_token token = 1;
  if (this->has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void logout_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.logout_request)
  GOOGLE_DCHECK_NE(&from, this);
  const logout_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<logout_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.logout_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.logout_request)
    MergeFrom(*source);
  }
}

void logout_request::MergeFrom(const logout_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.logout_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_token()) {
    _internal_mutable_token()->::come_together_grpc::access_token::MergeFrom(from._internal_token());
  }
}

void logout_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.logout_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void logout_request::CopyFrom(const logout_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.logout_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool logout_request::IsInitialized() const {
  return true;
}

void logout_request::InternalSwap(logout_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(token_, other->token_);
}

::PROTOBUF_NAMESPACE_ID::Metadata logout_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void logout_response::InitAsDefaultInstance() {
}
class logout_response::_Internal {
 public:
};

logout_response::logout_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.logout_response)
}
logout_response::logout_response(const logout_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.logout_response)
}

void logout_response::SharedCtor() {
  res_ = 0;
}

logout_response::~logout_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.logout_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void logout_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void logout_response::ArenaDtor(void* object) {
  logout_response* _this = reinterpret_cast< logout_response* >(object);
  (void)_this;
}
void logout_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void logout_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const logout_response& logout_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_logout_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void logout_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.logout_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* logout_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.logout_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::logout_response_result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* logout_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.logout_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.logout_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.logout_response)
  return target;
}

size_t logout_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.logout_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.logout_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void logout_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.logout_response)
  GOOGLE_DCHECK_NE(&from, this);
  const logout_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<logout_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.logout_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.logout_response)
    MergeFrom(*source);
  }
}

void logout_response::MergeFrom(const logout_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.logout_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void logout_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.logout_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void logout_response::CopyFrom(const logout_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.logout_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool logout_response::IsInitialized() const {
  return true;
}

void logout_response::InternalSwap(logout_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(res_, other->res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata logout_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void send_push_token_request::InitAsDefaultInstance() {
  ::come_together_grpc::_send_push_token_request_default_instance_._instance.get_mutable()->app_id_ = const_cast< ::come_together_grpc::application_id*>(
      ::come_together_grpc::application_id::internal_default_instance());
}
class send_push_token_request::_Internal {
 public:
  static const ::come_together_grpc::application_id& app_id(const send_push_token_request* msg);
};

const ::come_together_grpc::application_id&
send_push_token_request::_Internal::app_id(const send_push_token_request* msg) {
  return *msg->app_id_;
}
send_push_token_request::send_push_token_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.send_push_token_request)
}
send_push_token_request::send_push_token_request(const send_push_token_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  push_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_push_token().empty()) {
    push_token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_push_token(),
      GetArena());
  }
  if (from._internal_has_app_id()) {
    app_id_ = new ::come_together_grpc::application_id(*from.app_id_);
  } else {
    app_id_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.send_push_token_request)
}

void send_push_token_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_send_push_token_request_come_5ftogether_2eproto.base);
  push_token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  app_id_ = nullptr;
}

send_push_token_request::~send_push_token_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.send_push_token_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void send_push_token_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  push_token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete app_id_;
}

void send_push_token_request::ArenaDtor(void* object) {
  send_push_token_request* _this = reinterpret_cast< send_push_token_request* >(object);
  (void)_this;
}
void send_push_token_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void send_push_token_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const send_push_token_request& send_push_token_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_send_push_token_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void send_push_token_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.send_push_token_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  push_token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && app_id_ != nullptr) {
    delete app_id_;
  }
  app_id_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* send_push_token_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.application_id app_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_app_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string push_token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_push_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.send_push_token_request.push_token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* send_push_token_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.send_push_token_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.application_id app_id = 1;
  if (this->has_app_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::app_id(this), target, stream);
  }

  // string push_token = 2;
  if (this->push_token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_push_token().data(), static_cast<int>(this->_internal_push_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.send_push_token_request.push_token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_push_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.send_push_token_request)
  return target;
}

size_t send_push_token_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.send_push_token_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string push_token = 2;
  if (this->push_token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_push_token());
  }

  // .come_together_grpc.application_id app_id = 1;
  if (this->has_app_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *app_id_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void send_push_token_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.send_push_token_request)
  GOOGLE_DCHECK_NE(&from, this);
  const send_push_token_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<send_push_token_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.send_push_token_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.send_push_token_request)
    MergeFrom(*source);
  }
}

void send_push_token_request::MergeFrom(const send_push_token_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.send_push_token_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.push_token().size() > 0) {
    _internal_set_push_token(from._internal_push_token());
  }
  if (from.has_app_id()) {
    _internal_mutable_app_id()->::come_together_grpc::application_id::MergeFrom(from._internal_app_id());
  }
}

void send_push_token_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.send_push_token_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void send_push_token_request::CopyFrom(const send_push_token_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.send_push_token_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool send_push_token_request::IsInitialized() const {
  return true;
}

void send_push_token_request::InternalSwap(send_push_token_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  push_token_.Swap(&other->push_token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(app_id_, other->app_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata send_push_token_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void send_push_token_response::InitAsDefaultInstance() {
}
class send_push_token_response::_Internal {
 public:
};

send_push_token_response::send_push_token_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.send_push_token_response)
}
send_push_token_response::send_push_token_response(const send_push_token_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.send_push_token_response)
}

void send_push_token_response::SharedCtor() {
  res_ = 0;
}

send_push_token_response::~send_push_token_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.send_push_token_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void send_push_token_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void send_push_token_response::ArenaDtor(void* object) {
  send_push_token_response* _this = reinterpret_cast< send_push_token_response* >(object);
  (void)_this;
}
void send_push_token_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void send_push_token_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const send_push_token_response& send_push_token_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_send_push_token_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void send_push_token_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.send_push_token_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* send_push_token_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.send_push_token_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::send_push_token_response_result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* send_push_token_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.send_push_token_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.send_push_token_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.send_push_token_response)
  return target;
}

size_t send_push_token_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.send_push_token_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.send_push_token_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void send_push_token_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.send_push_token_response)
  GOOGLE_DCHECK_NE(&from, this);
  const send_push_token_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<send_push_token_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.send_push_token_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.send_push_token_response)
    MergeFrom(*source);
  }
}

void send_push_token_response::MergeFrom(const send_push_token_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.send_push_token_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void send_push_token_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.send_push_token_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void send_push_token_response::CopyFrom(const send_push_token_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.send_push_token_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool send_push_token_response::IsInitialized() const {
  return true;
}

void send_push_token_response::InternalSwap(send_push_token_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(res_, other->res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata send_push_token_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void delete_marker_request::InitAsDefaultInstance() {
  ::come_together_grpc::_delete_marker_request_default_instance_._instance.get_mutable()->token_ = const_cast< ::come_together_grpc::access_token*>(
      ::come_together_grpc::access_token::internal_default_instance());
}
class delete_marker_request::_Internal {
 public:
  static const ::come_together_grpc::access_token& token(const delete_marker_request* msg);
};

const ::come_together_grpc::access_token&
delete_marker_request::_Internal::token(const delete_marker_request* msg) {
  return *msg->token_;
}
delete_marker_request::delete_marker_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.delete_marker_request)
}
delete_marker_request::delete_marker_request(const delete_marker_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  marker_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_marker_uuid().empty()) {
    marker_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_marker_uuid(),
      GetArena());
  }
  if (from._internal_has_token()) {
    token_ = new ::come_together_grpc::access_token(*from.token_);
  } else {
    token_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.delete_marker_request)
}

void delete_marker_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_delete_marker_request_come_5ftogether_2eproto.base);
  marker_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_ = nullptr;
}

delete_marker_request::~delete_marker_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.delete_marker_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void delete_marker_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  marker_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete token_;
}

void delete_marker_request::ArenaDtor(void* object) {
  delete_marker_request* _this = reinterpret_cast< delete_marker_request* >(object);
  (void)_this;
}
void delete_marker_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void delete_marker_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const delete_marker_request& delete_marker_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_delete_marker_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void delete_marker_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.delete_marker_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  marker_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* delete_marker_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.access_token token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string marker_uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_marker_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.delete_marker_request.marker_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* delete_marker_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.delete_marker_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.access_token token = 1;
  if (this->has_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::token(this), target, stream);
  }

  // string marker_uuid = 2;
  if (this->marker_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_marker_uuid().data(), static_cast<int>(this->_internal_marker_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.delete_marker_request.marker_uuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_marker_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.delete_marker_request)
  return target;
}

size_t delete_marker_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.delete_marker_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string marker_uuid = 2;
  if (this->marker_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_marker_uuid());
  }

  // .come_together_grpc.access_token token = 1;
  if (this->has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delete_marker_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.delete_marker_request)
  GOOGLE_DCHECK_NE(&from, this);
  const delete_marker_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<delete_marker_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.delete_marker_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.delete_marker_request)
    MergeFrom(*source);
  }
}

void delete_marker_request::MergeFrom(const delete_marker_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.delete_marker_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.marker_uuid().size() > 0) {
    _internal_set_marker_uuid(from._internal_marker_uuid());
  }
  if (from.has_token()) {
    _internal_mutable_token()->::come_together_grpc::access_token::MergeFrom(from._internal_token());
  }
}

void delete_marker_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.delete_marker_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delete_marker_request::CopyFrom(const delete_marker_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.delete_marker_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delete_marker_request::IsInitialized() const {
  return true;
}

void delete_marker_request::InternalSwap(delete_marker_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  marker_uuid_.Swap(&other->marker_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(token_, other->token_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delete_marker_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void delete_marker_reponse::InitAsDefaultInstance() {
}
class delete_marker_reponse::_Internal {
 public:
};

delete_marker_reponse::delete_marker_reponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.delete_marker_reponse)
}
delete_marker_reponse::delete_marker_reponse(const delete_marker_reponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.delete_marker_reponse)
}

void delete_marker_reponse::SharedCtor() {
  res_ = 0;
}

delete_marker_reponse::~delete_marker_reponse() {
  // @@protoc_insertion_point(destructor:come_together_grpc.delete_marker_reponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void delete_marker_reponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void delete_marker_reponse::ArenaDtor(void* object) {
  delete_marker_reponse* _this = reinterpret_cast< delete_marker_reponse* >(object);
  (void)_this;
}
void delete_marker_reponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void delete_marker_reponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const delete_marker_reponse& delete_marker_reponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_delete_marker_reponse_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void delete_marker_reponse::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.delete_marker_reponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* delete_marker_reponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.delete_marker_reponse.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::delete_marker_reponse_result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* delete_marker_reponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.delete_marker_reponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.delete_marker_reponse.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.delete_marker_reponse)
  return target;
}

size_t delete_marker_reponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.delete_marker_reponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.delete_marker_reponse.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void delete_marker_reponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.delete_marker_reponse)
  GOOGLE_DCHECK_NE(&from, this);
  const delete_marker_reponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<delete_marker_reponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.delete_marker_reponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.delete_marker_reponse)
    MergeFrom(*source);
  }
}

void delete_marker_reponse::MergeFrom(const delete_marker_reponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.delete_marker_reponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void delete_marker_reponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.delete_marker_reponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void delete_marker_reponse::CopyFrom(const delete_marker_reponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.delete_marker_reponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool delete_marker_reponse::IsInitialized() const {
  return true;
}

void delete_marker_reponse::InternalSwap(delete_marker_reponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(res_, other->res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata delete_marker_reponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ask_token_request::InitAsDefaultInstance() {
}
class ask_token_request::_Internal {
 public:
};

ask_token_request::ask_token_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.ask_token_request)
}
ask_token_request::ask_token_request(const ask_token_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.ask_token_request)
}

void ask_token_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ask_token_request_come_5ftogether_2eproto.base);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ask_token_request::~ask_token_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.ask_token_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ask_token_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ask_token_request::ArenaDtor(void* object) {
  ask_token_request* _this = reinterpret_cast< ask_token_request* >(object);
  (void)_this;
}
void ask_token_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ask_token_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ask_token_request& ask_token_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ask_token_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void ask_token_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.ask_token_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ask_token_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.ask_token_request.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ask_token_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.ask_token_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.ask_token_request.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.ask_token_request)
  return target;
}

size_t ask_token_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.ask_token_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ask_token_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.ask_token_request)
  GOOGLE_DCHECK_NE(&from, this);
  const ask_token_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ask_token_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.ask_token_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.ask_token_request)
    MergeFrom(*source);
  }
}

void ask_token_request::MergeFrom(const ask_token_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.ask_token_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
}

void ask_token_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.ask_token_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ask_token_request::CopyFrom(const ask_token_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.ask_token_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ask_token_request::IsInitialized() const {
  return true;
}

void ask_token_request::InternalSwap(ask_token_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ask_token_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ask_token_response::InitAsDefaultInstance() {
}
class ask_token_response::_Internal {
 public:
};

ask_token_response::ask_token_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.ask_token_response)
}
ask_token_response::ask_token_response(const ask_token_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.ask_token_response)
}

void ask_token_response::SharedCtor() {
  res_ = 0;
}

ask_token_response::~ask_token_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.ask_token_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ask_token_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ask_token_response::ArenaDtor(void* object) {
  ask_token_response* _this = reinterpret_cast< ask_token_response* >(object);
  (void)_this;
}
void ask_token_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ask_token_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ask_token_response& ask_token_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ask_token_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void ask_token_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.ask_token_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ask_token_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.ask_token_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::ask_token_response_result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ask_token_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.ask_token_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.ask_token_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.ask_token_response)
  return target;
}

size_t ask_token_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.ask_token_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.ask_token_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ask_token_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.ask_token_response)
  GOOGLE_DCHECK_NE(&from, this);
  const ask_token_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ask_token_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.ask_token_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.ask_token_response)
    MergeFrom(*source);
  }
}

void ask_token_response::MergeFrom(const ask_token_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.ask_token_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void ask_token_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.ask_token_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ask_token_response::CopyFrom(const ask_token_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.ask_token_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ask_token_response::IsInitialized() const {
  return true;
}

void ask_token_response::InternalSwap(ask_token_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(res_, other->res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ask_token_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void verify_token_request::InitAsDefaultInstance() {
}
class verify_token_request::_Internal {
 public:
};

verify_token_request::verify_token_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.verify_token_request)
}
verify_token_request::verify_token_request(const verify_token_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.verify_token_request)
}

void verify_token_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_verify_token_request_come_5ftogether_2eproto.base);
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

verify_token_request::~verify_token_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.verify_token_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void verify_token_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void verify_token_request::ArenaDtor(void* object) {
  verify_token_request* _this = reinterpret_cast< verify_token_request* >(object);
  (void)_this;
}
void verify_token_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void verify_token_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const verify_token_request& verify_token_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_verify_token_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void verify_token_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.verify_token_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* verify_token_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.verify_token_request.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.verify_token_request.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* verify_token_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.verify_token_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.verify_token_request.email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.verify_token_request.token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_token(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.verify_token_request)
  return target;
}

size_t verify_token_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.verify_token_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void verify_token_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.verify_token_request)
  GOOGLE_DCHECK_NE(&from, this);
  const verify_token_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<verify_token_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.verify_token_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.verify_token_request)
    MergeFrom(*source);
  }
}

void verify_token_request::MergeFrom(const verify_token_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.verify_token_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
}

void verify_token_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.verify_token_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void verify_token_request::CopyFrom(const verify_token_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.verify_token_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool verify_token_request::IsInitialized() const {
  return true;
}

void verify_token_request::InternalSwap(verify_token_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata verify_token_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void verify_token_response::InitAsDefaultInstance() {
}
class verify_token_response::_Internal {
 public:
};

verify_token_response::verify_token_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.verify_token_response)
}
verify_token_response::verify_token_response(const verify_token_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.verify_token_response)
}

void verify_token_response::SharedCtor() {
  res_ = 0;
}

verify_token_response::~verify_token_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.verify_token_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void verify_token_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void verify_token_response::ArenaDtor(void* object) {
  verify_token_response* _this = reinterpret_cast< verify_token_response* >(object);
  (void)_this;
}
void verify_token_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void verify_token_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const verify_token_response& verify_token_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_verify_token_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void verify_token_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.verify_token_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* verify_token_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.verify_token_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::verify_token_response_result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* verify_token_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.verify_token_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.verify_token_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.verify_token_response)
  return target;
}

size_t verify_token_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.verify_token_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.verify_token_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void verify_token_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.verify_token_response)
  GOOGLE_DCHECK_NE(&from, this);
  const verify_token_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<verify_token_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.verify_token_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.verify_token_response)
    MergeFrom(*source);
  }
}

void verify_token_response::MergeFrom(const verify_token_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.verify_token_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void verify_token_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.verify_token_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void verify_token_response::CopyFrom(const verify_token_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.verify_token_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool verify_token_response::IsInitialized() const {
  return true;
}

void verify_token_response::InternalSwap(verify_token_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(res_, other->res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata verify_token_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void update_info_request::InitAsDefaultInstance() {
  ::come_together_grpc::_update_info_request_default_instance_._instance.get_mutable()->token_ = const_cast< ::come_together_grpc::access_token*>(
      ::come_together_grpc::access_token::internal_default_instance());
  ::come_together_grpc::_update_info_request_default_instance_.m_info_ = const_cast< ::come_together_grpc::marker_info*>(
      ::come_together_grpc::marker_info::internal_default_instance());
  ::come_together_grpc::_update_info_request_default_instance_.u_info_ = const_cast< ::come_together_grpc::user_info*>(
      ::come_together_grpc::user_info::internal_default_instance());
}
class update_info_request::_Internal {
 public:
  static const ::come_together_grpc::access_token& token(const update_info_request* msg);
  static const ::come_together_grpc::marker_info& m_info(const update_info_request* msg);
  static const ::come_together_grpc::user_info& u_info(const update_info_request* msg);
};

const ::come_together_grpc::access_token&
update_info_request::_Internal::token(const update_info_request* msg) {
  return *msg->token_;
}
const ::come_together_grpc::marker_info&
update_info_request::_Internal::m_info(const update_info_request* msg) {
  return *msg->data_.m_info_;
}
const ::come_together_grpc::user_info&
update_info_request::_Internal::u_info(const update_info_request* msg) {
  return *msg->data_.u_info_;
}
void update_info_request::set_allocated_m_info(::come_together_grpc::marker_info* m_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (m_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(m_info);
    if (message_arena != submessage_arena) {
      m_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, m_info, submessage_arena);
    }
    set_has_m_info();
    data_.m_info_ = m_info;
  }
  // @@protoc_insertion_point(field_set_allocated:come_together_grpc.update_info_request.m_info)
}
void update_info_request::set_allocated_u_info(::come_together_grpc::user_info* u_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (u_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(u_info);
    if (message_arena != submessage_arena) {
      u_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, u_info, submessage_arena);
    }
    set_has_u_info();
    data_.u_info_ = u_info;
  }
  // @@protoc_insertion_point(field_set_allocated:come_together_grpc.update_info_request.u_info)
}
update_info_request::update_info_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.update_info_request)
}
update_info_request::update_info_request(const update_info_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_token()) {
    token_ = new ::come_together_grpc::access_token(*from.token_);
  } else {
    token_ = nullptr;
  }
  type_ = from.type_;
  clear_has_data();
  switch (from.data_case()) {
    case kMInfo: {
      _internal_mutable_m_info()->::come_together_grpc::marker_info::MergeFrom(from._internal_m_info());
      break;
    }
    case kUInfo: {
      _internal_mutable_u_info()->::come_together_grpc::user_info::MergeFrom(from._internal_u_info());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.update_info_request)
}

void update_info_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_update_info_request_come_5ftogether_2eproto.base);
  ::memset(&token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&token_)) + sizeof(type_));
  clear_has_data();
}

update_info_request::~update_info_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.update_info_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void update_info_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete token_;
  if (has_data()) {
    clear_data();
  }
}

void update_info_request::ArenaDtor(void* object) {
  update_info_request* _this = reinterpret_cast< update_info_request* >(object);
  (void)_this;
}
void update_info_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void update_info_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const update_info_request& update_info_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_update_info_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void update_info_request::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:come_together_grpc.update_info_request)
  switch (data_case()) {
    case kMInfo: {
      if (GetArena() == nullptr) {
        delete data_.m_info_;
      }
      break;
    }
    case kUInfo: {
      if (GetArena() == nullptr) {
        delete data_.u_info_;
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void update_info_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.update_info_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
  type_ = 0;
  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* update_info_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.access_token token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.update_info_request.update_type type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::come_together_grpc::update_info_request_update_type>(val));
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.marker_info m_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_m_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.user_info u_info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_u_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* update_info_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.update_info_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.access_token token = 1;
  if (this->has_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::token(this), target, stream);
  }

  // .come_together_grpc.update_info_request.update_type type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // .come_together_grpc.marker_info m_info = 3;
  if (_internal_has_m_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::m_info(this), target, stream);
  }

  // .come_together_grpc.user_info u_info = 4;
  if (_internal_has_u_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::u_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.update_info_request)
  return target;
}

size_t update_info_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.update_info_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.access_token token = 1;
  if (this->has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_);
  }

  // .come_together_grpc.update_info_request.update_type type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (data_case()) {
    // .come_together_grpc.marker_info m_info = 3;
    case kMInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.m_info_);
      break;
    }
    // .come_together_grpc.user_info u_info = 4;
    case kUInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.u_info_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void update_info_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.update_info_request)
  GOOGLE_DCHECK_NE(&from, this);
  const update_info_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<update_info_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.update_info_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.update_info_request)
    MergeFrom(*source);
  }
}

void update_info_request::MergeFrom(const update_info_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.update_info_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_token()) {
    _internal_mutable_token()->::come_together_grpc::access_token::MergeFrom(from._internal_token());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  switch (from.data_case()) {
    case kMInfo: {
      _internal_mutable_m_info()->::come_together_grpc::marker_info::MergeFrom(from._internal_m_info());
      break;
    }
    case kUInfo: {
      _internal_mutable_u_info()->::come_together_grpc::user_info::MergeFrom(from._internal_u_info());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void update_info_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.update_info_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void update_info_request::CopyFrom(const update_info_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.update_info_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool update_info_request::IsInitialized() const {
  return true;
}

void update_info_request::InternalSwap(update_info_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(update_info_request, type_)
      + sizeof(update_info_request::type_)
      - PROTOBUF_FIELD_OFFSET(update_info_request, token_)>(
          reinterpret_cast<char*>(&token_),
          reinterpret_cast<char*>(&other->token_));
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata update_info_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void update_info_response::InitAsDefaultInstance() {
}
class update_info_response::_Internal {
 public:
};

update_info_response::update_info_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.update_info_response)
}
update_info_response::update_info_response(const update_info_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.update_info_response)
}

void update_info_response::SharedCtor() {
  res_ = 0;
}

update_info_response::~update_info_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.update_info_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void update_info_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void update_info_response::ArenaDtor(void* object) {
  update_info_response* _this = reinterpret_cast< update_info_response* >(object);
  (void)_this;
}
void update_info_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void update_info_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const update_info_response& update_info_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_update_info_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void update_info_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.update_info_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* update_info_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.update_info_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::update_info_response_result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* update_info_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.update_info_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.update_info_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.update_info_response)
  return target;
}

size_t update_info_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.update_info_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.update_info_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void update_info_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.update_info_response)
  GOOGLE_DCHECK_NE(&from, this);
  const update_info_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<update_info_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.update_info_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.update_info_response)
    MergeFrom(*source);
  }
}

void update_info_response::MergeFrom(const update_info_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.update_info_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void update_info_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.update_info_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void update_info_response::CopyFrom(const update_info_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.update_info_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool update_info_response::IsInitialized() const {
  return true;
}

void update_info_response::InternalSwap(update_info_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(res_, other->res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata update_info_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void event::InitAsDefaultInstance() {
  ::come_together_grpc::_event_default_instance_.m_info_ = const_cast< ::come_together_grpc::marker_info*>(
      ::come_together_grpc::marker_info::internal_default_instance());
  ::come_together_grpc::_event_default_instance_.c_message_ = const_cast< ::come_together_grpc::chat_message*>(
      ::come_together_grpc::chat_message::internal_default_instance());
  ::come_together_grpc::_event_default_instance_.u_info_ = const_cast< ::come_together_grpc::user_info*>(
      ::come_together_grpc::user_info::internal_default_instance());
}
class event::_Internal {
 public:
  static const ::come_together_grpc::marker_info& m_info(const event* msg);
  static const ::come_together_grpc::chat_message& c_message(const event* msg);
  static const ::come_together_grpc::user_info& u_info(const event* msg);
};

const ::come_together_grpc::marker_info&
event::_Internal::m_info(const event* msg) {
  return *msg->data_.m_info_;
}
const ::come_together_grpc::chat_message&
event::_Internal::c_message(const event* msg) {
  return *msg->data_.c_message_;
}
const ::come_together_grpc::user_info&
event::_Internal::u_info(const event* msg) {
  return *msg->data_.u_info_;
}
void event::set_allocated_m_info(::come_together_grpc::marker_info* m_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (m_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(m_info);
    if (message_arena != submessage_arena) {
      m_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, m_info, submessage_arena);
    }
    set_has_m_info();
    data_.m_info_ = m_info;
  }
  // @@protoc_insertion_point(field_set_allocated:come_together_grpc.event.m_info)
}
void event::set_allocated_c_message(::come_together_grpc::chat_message* c_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (c_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(c_message);
    if (message_arena != submessage_arena) {
      c_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, c_message, submessage_arena);
    }
    set_has_c_message();
    data_.c_message_ = c_message;
  }
  // @@protoc_insertion_point(field_set_allocated:come_together_grpc.event.c_message)
}
void event::set_allocated_u_info(::come_together_grpc::user_info* u_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (u_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(u_info);
    if (message_arena != submessage_arena) {
      u_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, u_info, submessage_arena);
    }
    set_has_u_info();
    data_.u_info_ = u_info;
  }
  // @@protoc_insertion_point(field_set_allocated:come_together_grpc.event.u_info)
}
event::event(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.event)
}
event::event(const event& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  event_type_ = from.event_type_;
  clear_has_data();
  switch (from.data_case()) {
    case kMInfo: {
      _internal_mutable_m_info()->::come_together_grpc::marker_info::MergeFrom(from._internal_m_info());
      break;
    }
    case kCMessage: {
      _internal_mutable_c_message()->::come_together_grpc::chat_message::MergeFrom(from._internal_c_message());
      break;
    }
    case kUInfo: {
      _internal_mutable_u_info()->::come_together_grpc::user_info::MergeFrom(from._internal_u_info());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.event)
}

void event::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_event_come_5ftogether_2eproto.base);
  event_type_ = 0;
  clear_has_data();
}

event::~event() {
  // @@protoc_insertion_point(destructor:come_together_grpc.event)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void event::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void event::ArenaDtor(void* object) {
  event* _this = reinterpret_cast< event* >(object);
  (void)_this;
}
void event::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const event& event::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_event_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void event::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:come_together_grpc.event)
  switch (data_case()) {
    case kMInfo: {
      if (GetArena() == nullptr) {
        delete data_.m_info_;
      }
      break;
    }
    case kCMessage: {
      if (GetArena() == nullptr) {
        delete data_.c_message_;
      }
      break;
    }
    case kUInfo: {
      if (GetArena() == nullptr) {
        delete data_.u_info_;
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void event::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  event_type_ = 0;
  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* event::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.event.type event_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_event_type(static_cast<::come_together_grpc::event_type>(val));
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.marker_info m_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_m_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.chat_message c_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_c_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.user_info u_info = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_u_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* event::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.event)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.event.type event_type = 1;
  if (this->event_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_event_type(), target);
  }

  // .come_together_grpc.marker_info m_info = 2;
  if (_internal_has_m_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::m_info(this), target, stream);
  }

  // .come_together_grpc.chat_message c_message = 3;
  if (_internal_has_c_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::c_message(this), target, stream);
  }

  // .come_together_grpc.user_info u_info = 4;
  if (_internal_has_u_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::u_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.event)
  return target;
}

size_t event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.event)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.event.type event_type = 1;
  if (this->event_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_event_type());
  }

  switch (data_case()) {
    // .come_together_grpc.marker_info m_info = 2;
    case kMInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.m_info_);
      break;
    }
    // .come_together_grpc.chat_message c_message = 3;
    case kCMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.c_message_);
      break;
    }
    // .come_together_grpc.user_info u_info = 4;
    case kUInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.u_info_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void event::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.event)
  GOOGLE_DCHECK_NE(&from, this);
  const event* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<event>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.event)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.event)
    MergeFrom(*source);
  }
}

void event::MergeFrom(const event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.event_type() != 0) {
    _internal_set_event_type(from._internal_event_type());
  }
  switch (from.data_case()) {
    case kMInfo: {
      _internal_mutable_m_info()->::come_together_grpc::marker_info::MergeFrom(from._internal_m_info());
      break;
    }
    case kCMessage: {
      _internal_mutable_c_message()->::come_together_grpc::chat_message::MergeFrom(from._internal_c_message());
      break;
    }
    case kUInfo: {
      _internal_mutable_u_info()->::come_together_grpc::user_info::MergeFrom(from._internal_u_info());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void event::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void event::CopyFrom(const event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool event::IsInitialized() const {
  return true;
}

void event::InternalSwap(event* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(event_type_, other->event_type_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata event::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void chat_info::InitAsDefaultInstance() {
}
class chat_info::_Internal {
 public:
};

chat_info::chat_info(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  participants_uuid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.chat_info)
}
chat_info::chat_info(const chat_info& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      participants_uuid_(from.participants_uuid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uuid(),
      GetArena());
  }
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_title().empty()) {
    title_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_title(),
      GetArena());
  }
  last_visible_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_visible_message().empty()) {
    last_visible_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_last_visible_message(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.chat_info)
}

void chat_info::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_chat_info_come_5ftogether_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_visible_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

chat_info::~chat_info() {
  // @@protoc_insertion_point(destructor:come_together_grpc.chat_info)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void chat_info::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_visible_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void chat_info::ArenaDtor(void* object) {
  chat_info* _this = reinterpret_cast< chat_info* >(object);
  (void)_this;
}
void chat_info::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void chat_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const chat_info& chat_info::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_chat_info_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void chat_info::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.chat_info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  participants_uuid_.Clear();
  uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  title_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  last_visible_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* chat_info::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.chat_info.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string title = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_title();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.chat_info.title"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string participants_uuid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_participants_uuid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.chat_info.participants_uuid"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string last_visible_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_last_visible_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.chat_info.last_visible_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* chat_info::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.chat_info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.chat_info.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.chat_info.title");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_title(), target);
  }

  // repeated string participants_uuid = 3;
  for (int i = 0, n = this->_internal_participants_uuid_size(); i < n; i++) {
    const auto& s = this->_internal_participants_uuid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.chat_info.participants_uuid");
    target = stream->WriteString(3, s, target);
  }

  // string last_visible_message = 4;
  if (this->last_visible_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_visible_message().data(), static_cast<int>(this->_internal_last_visible_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.chat_info.last_visible_message");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_last_visible_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.chat_info)
  return target;
}

size_t chat_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.chat_info)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string participants_uuid = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(participants_uuid_.size());
  for (int i = 0, n = participants_uuid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      participants_uuid_.Get(i));
  }

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string last_visible_message = 4;
  if (this->last_visible_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_visible_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void chat_info::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.chat_info)
  GOOGLE_DCHECK_NE(&from, this);
  const chat_info* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<chat_info>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.chat_info)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.chat_info)
    MergeFrom(*source);
  }
}

void chat_info::MergeFrom(const chat_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.chat_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  participants_uuid_.MergeFrom(from.participants_uuid_);
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.title().size() > 0) {
    _internal_set_title(from._internal_title());
  }
  if (from.last_visible_message().size() > 0) {
    _internal_set_last_visible_message(from._internal_last_visible_message());
  }
}

void chat_info::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.chat_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chat_info::CopyFrom(const chat_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.chat_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chat_info::IsInitialized() const {
  return true;
}

void chat_info::InternalSwap(chat_info* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  participants_uuid_.InternalSwap(&other->participants_uuid_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  title_.Swap(&other->title_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  last_visible_message_.Swap(&other->last_visible_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata chat_info::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void get_chat_messages_request::InitAsDefaultInstance() {
}
class get_chat_messages_request::_Internal {
 public:
};

get_chat_messages_request::get_chat_messages_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.get_chat_messages_request)
}
get_chat_messages_request::get_chat_messages_request(const get_chat_messages_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  chat_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chat_uuid().empty()) {
    chat_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_chat_uuid(),
      GetArena());
  }
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hash().empty()) {
    hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_hash(),
      GetArena());
  }
  ::memcpy(&page_size_, &from.page_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&page_number_) -
    reinterpret_cast<char*>(&page_size_)) + sizeof(page_number_));
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.get_chat_messages_request)
}

void get_chat_messages_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_get_chat_messages_request_come_5ftogether_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chat_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_number_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(page_number_));
}

get_chat_messages_request::~get_chat_messages_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.get_chat_messages_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void get_chat_messages_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chat_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void get_chat_messages_request::ArenaDtor(void* object) {
  get_chat_messages_request* _this = reinterpret_cast< get_chat_messages_request* >(object);
  (void)_this;
}
void get_chat_messages_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void get_chat_messages_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const get_chat_messages_request& get_chat_messages_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_get_chat_messages_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void get_chat_messages_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.get_chat_messages_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chat_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hash_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&page_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&page_number_) -
      reinterpret_cast<char*>(&page_size_)) + sizeof(page_number_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* get_chat_messages_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.get_chat_messages_request.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string chat_uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_chat_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.get_chat_messages_request.chat_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          page_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 page_number = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          page_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hash = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.get_chat_messages_request.hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* get_chat_messages_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.get_chat_messages_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.get_chat_messages_request.token");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_token(), target);
  }

  // string chat_uuid = 2;
  if (this->chat_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chat_uuid().data(), static_cast<int>(this->_internal_chat_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.get_chat_messages_request.chat_uuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_chat_uuid(), target);
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_page_size(), target);
  }

  // int32 page_number = 4;
  if (this->page_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_page_number(), target);
  }

  // string hash = 5;
  if (this->hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.get_chat_messages_request.hash");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_hash(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.get_chat_messages_request)
  return target;
}

size_t get_chat_messages_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.get_chat_messages_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string chat_uuid = 2;
  if (this->chat_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chat_uuid());
  }

  // string hash = 5;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_size());
  }

  // int32 page_number = 4;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_page_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void get_chat_messages_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.get_chat_messages_request)
  GOOGLE_DCHECK_NE(&from, this);
  const get_chat_messages_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<get_chat_messages_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.get_chat_messages_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.get_chat_messages_request)
    MergeFrom(*source);
  }
}

void get_chat_messages_request::MergeFrom(const get_chat_messages_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.get_chat_messages_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.chat_uuid().size() > 0) {
    _internal_set_chat_uuid(from._internal_chat_uuid());
  }
  if (from.hash().size() > 0) {
    _internal_set_hash(from._internal_hash());
  }
  if (from.page_size() != 0) {
    _internal_set_page_size(from._internal_page_size());
  }
  if (from.page_number() != 0) {
    _internal_set_page_number(from._internal_page_number());
  }
}

void get_chat_messages_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.get_chat_messages_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void get_chat_messages_request::CopyFrom(const get_chat_messages_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.get_chat_messages_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool get_chat_messages_request::IsInitialized() const {
  return true;
}

void get_chat_messages_request::InternalSwap(get_chat_messages_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chat_uuid_.Swap(&other->chat_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hash_.Swap(&other->hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(get_chat_messages_request, page_number_)
      + sizeof(get_chat_messages_request::page_number_)
      - PROTOBUF_FIELD_OFFSET(get_chat_messages_request, page_size_)>(
          reinterpret_cast<char*>(&page_size_),
          reinterpret_cast<char*>(&other->page_size_));
}

::PROTOBUF_NAMESPACE_ID::Metadata get_chat_messages_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void chat_message::InitAsDefaultInstance() {
  ::come_together_grpc::_chat_message_default_instance_.text_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class chat_message::_Internal {
 public:
};

chat_message::chat_message(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.chat_message)
}
chat_message::chat_message(const chat_message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sender_uuid().empty()) {
    sender_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_sender_uuid(),
      GetArena());
  }
  chat_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chat_uuid().empty()) {
    chat_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_chat_uuid(),
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uuid(),
      GetArena());
  }
  ::memcpy(&sent_unix_time_, &from.sent_unix_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&content_type_) -
    reinterpret_cast<char*>(&sent_unix_time_)) + sizeof(content_type_));
  clear_has_content();
  switch (from.content_case()) {
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.chat_message)
}

void chat_message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_chat_message_come_5ftogether_2eproto.base);
  sender_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chat_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&sent_unix_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_type_) -
      reinterpret_cast<char*>(&sent_unix_time_)) + sizeof(content_type_));
  clear_has_content();
}

chat_message::~chat_message() {
  // @@protoc_insertion_point(destructor:come_together_grpc.chat_message)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void chat_message::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sender_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chat_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_content()) {
    clear_content();
  }
}

void chat_message::ArenaDtor(void* object) {
  chat_message* _this = reinterpret_cast< chat_message* >(object);
  (void)_this;
}
void chat_message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void chat_message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const chat_message& chat_message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_chat_message_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void chat_message::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:come_together_grpc.chat_message)
  switch (content_case()) {
    case kText: {
      content_.text_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void chat_message::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.chat_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sender_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chat_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&sent_unix_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&content_type_) -
      reinterpret_cast<char*>(&sent_unix_time_)) + sizeof(content_type_));
  clear_content();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* chat_message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.chat_message.message_content content_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_content_type(static_cast<::come_together_grpc::chat_message_message_content>(val));
        } else goto handle_unusual;
        continue;
      // string sender_uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_sender_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.chat_message.sender_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.chat_message.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 sent_unix_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          sent_unix_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string chat_uuid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_chat_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.chat_message.chat_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 sequence_number = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          sequence_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.chat_message.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* chat_message::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.chat_message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.chat_message.message_content content_type = 1;
  if (this->content_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_content_type(), target);
  }

  // string sender_uuid = 2;
  if (this->sender_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender_uuid().data(), static_cast<int>(this->_internal_sender_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.chat_message.sender_uuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_sender_uuid(), target);
  }

  // string text = 3;
  if (_internal_has_text()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.chat_message.text");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text(), target);
  }

  // int64 sent_unix_time = 4;
  if (this->sent_unix_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_sent_unix_time(), target);
  }

  // string chat_uuid = 5;
  if (this->chat_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chat_uuid().data(), static_cast<int>(this->_internal_chat_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.chat_message.chat_uuid");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_chat_uuid(), target);
  }

  // int64 sequence_number = 6;
  if (this->sequence_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_sequence_number(), target);
  }

  // string uuid = 7;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.chat_message.uuid");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.chat_message)
  return target;
}

size_t chat_message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.chat_message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sender_uuid = 2;
  if (this->sender_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender_uuid());
  }

  // string chat_uuid = 5;
  if (this->chat_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chat_uuid());
  }

  // string uuid = 7;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // int64 sent_unix_time = 4;
  if (this->sent_unix_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_sent_unix_time());
  }

  // int64 sequence_number = 6;
  if (this->sequence_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_sequence_number());
  }

  // .come_together_grpc.chat_message.message_content content_type = 1;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_content_type());
  }

  switch (content_case()) {
    // string text = 3;
    case kText: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void chat_message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.chat_message)
  GOOGLE_DCHECK_NE(&from, this);
  const chat_message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<chat_message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.chat_message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.chat_message)
    MergeFrom(*source);
  }
}

void chat_message::MergeFrom(const chat_message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.chat_message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sender_uuid().size() > 0) {
    _internal_set_sender_uuid(from._internal_sender_uuid());
  }
  if (from.chat_uuid().size() > 0) {
    _internal_set_chat_uuid(from._internal_chat_uuid());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.sent_unix_time() != 0) {
    _internal_set_sent_unix_time(from._internal_sent_unix_time());
  }
  if (from.sequence_number() != 0) {
    _internal_set_sequence_number(from._internal_sequence_number());
  }
  if (from.content_type() != 0) {
    _internal_set_content_type(from._internal_content_type());
  }
  switch (from.content_case()) {
    case kText: {
      _internal_set_text(from._internal_text());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void chat_message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.chat_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void chat_message::CopyFrom(const chat_message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.chat_message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool chat_message::IsInitialized() const {
  return true;
}

void chat_message::InternalSwap(chat_message* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sender_uuid_.Swap(&other->sender_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chat_uuid_.Swap(&other->chat_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(chat_message, content_type_)
      + sizeof(chat_message::content_type_)
      - PROTOBUF_FIELD_OFFSET(chat_message, sent_unix_time_)>(
          reinterpret_cast<char*>(&sent_unix_time_),
          reinterpret_cast<char*>(&other->sent_unix_time_));
  swap(content_, other->content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata chat_message::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void send_chat_message_request::InitAsDefaultInstance() {
  ::come_together_grpc::_send_chat_message_request_default_instance_._instance.get_mutable()->token_ = const_cast< ::come_together_grpc::access_token*>(
      ::come_together_grpc::access_token::internal_default_instance());
  ::come_together_grpc::_send_chat_message_request_default_instance_._instance.get_mutable()->message_ = const_cast< ::come_together_grpc::chat_message*>(
      ::come_together_grpc::chat_message::internal_default_instance());
}
class send_chat_message_request::_Internal {
 public:
  static const ::come_together_grpc::access_token& token(const send_chat_message_request* msg);
  static const ::come_together_grpc::chat_message& message(const send_chat_message_request* msg);
};

const ::come_together_grpc::access_token&
send_chat_message_request::_Internal::token(const send_chat_message_request* msg) {
  return *msg->token_;
}
const ::come_together_grpc::chat_message&
send_chat_message_request::_Internal::message(const send_chat_message_request* msg) {
  return *msg->message_;
}
send_chat_message_request::send_chat_message_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.send_chat_message_request)
}
send_chat_message_request::send_chat_message_request(const send_chat_message_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_token()) {
    token_ = new ::come_together_grpc::access_token(*from.token_);
  } else {
    token_ = nullptr;
  }
  if (from._internal_has_message()) {
    message_ = new ::come_together_grpc::chat_message(*from.message_);
  } else {
    message_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.send_chat_message_request)
}

void send_chat_message_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_send_chat_message_request_come_5ftogether_2eproto.base);
  ::memset(&token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_) -
      reinterpret_cast<char*>(&token_)) + sizeof(message_));
}

send_chat_message_request::~send_chat_message_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.send_chat_message_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void send_chat_message_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete token_;
  if (this != internal_default_instance()) delete message_;
}

void send_chat_message_request::ArenaDtor(void* object) {
  send_chat_message_request* _this = reinterpret_cast< send_chat_message_request* >(object);
  (void)_this;
}
void send_chat_message_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void send_chat_message_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const send_chat_message_request& send_chat_message_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_send_chat_message_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void send_chat_message_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.send_chat_message_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
  if (GetArena() == nullptr && message_ != nullptr) {
    delete message_;
  }
  message_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* send_chat_message_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.access_token token = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.chat_message message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* send_chat_message_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.send_chat_message_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.access_token token = 1;
  if (this->has_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::token(this), target, stream);
  }

  // .come_together_grpc.chat_message message = 2;
  if (this->has_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.send_chat_message_request)
  return target;
}

size_t send_chat_message_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.send_chat_message_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.access_token token = 1;
  if (this->has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_);
  }

  // .come_together_grpc.chat_message message = 2;
  if (this->has_message()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *message_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void send_chat_message_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.send_chat_message_request)
  GOOGLE_DCHECK_NE(&from, this);
  const send_chat_message_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<send_chat_message_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.send_chat_message_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.send_chat_message_request)
    MergeFrom(*source);
  }
}

void send_chat_message_request::MergeFrom(const send_chat_message_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.send_chat_message_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_token()) {
    _internal_mutable_token()->::come_together_grpc::access_token::MergeFrom(from._internal_token());
  }
  if (from.has_message()) {
    _internal_mutable_message()->::come_together_grpc::chat_message::MergeFrom(from._internal_message());
  }
}

void send_chat_message_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.send_chat_message_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void send_chat_message_request::CopyFrom(const send_chat_message_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.send_chat_message_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool send_chat_message_request::IsInitialized() const {
  return true;
}

void send_chat_message_request::InternalSwap(send_chat_message_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(send_chat_message_request, message_)
      + sizeof(send_chat_message_request::message_)
      - PROTOBUF_FIELD_OFFSET(send_chat_message_request, token_)>(
          reinterpret_cast<char*>(&token_),
          reinterpret_cast<char*>(&other->token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata send_chat_message_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void send_chat_message_response::InitAsDefaultInstance() {
}
class send_chat_message_response::_Internal {
 public:
};

send_chat_message_response::send_chat_message_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.send_chat_message_response)
}
send_chat_message_response::send_chat_message_response(const send_chat_message_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message_uuid().empty()) {
    message_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message_uuid(),
      GetArena());
  }
  ::memcpy(&actual_sequence_number_, &from.actual_sequence_number_,
    static_cast<size_t>(reinterpret_cast<char*>(&res_) -
    reinterpret_cast<char*>(&actual_sequence_number_)) + sizeof(res_));
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.send_chat_message_response)
}

void send_chat_message_response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_send_chat_message_response_come_5ftogether_2eproto.base);
  message_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&actual_sequence_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&actual_sequence_number_)) + sizeof(res_));
}

send_chat_message_response::~send_chat_message_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.send_chat_message_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void send_chat_message_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void send_chat_message_response::ArenaDtor(void* object) {
  send_chat_message_response* _this = reinterpret_cast< send_chat_message_response* >(object);
  (void)_this;
}
void send_chat_message_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void send_chat_message_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const send_chat_message_response& send_chat_message_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_send_chat_message_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void send_chat_message_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.send_chat_message_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&actual_sequence_number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&actual_sequence_number_)) + sizeof(res_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* send_chat_message_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.send_chat_message_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::send_chat_message_response_result>(val));
        } else goto handle_unusual;
        continue;
      // int64 actual_sequence_number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          actual_sequence_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message_uuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_message_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.send_chat_message_response.message_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* send_chat_message_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.send_chat_message_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.send_chat_message_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  // int64 actual_sequence_number = 2;
  if (this->actual_sequence_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_actual_sequence_number(), target);
  }

  // string message_uuid = 4;
  if (this->message_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_uuid().data(), static_cast<int>(this->_internal_message_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.send_chat_message_response.message_uuid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_message_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.send_chat_message_response)
  return target;
}

size_t send_chat_message_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.send_chat_message_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message_uuid = 4;
  if (this->message_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_uuid());
  }

  // int64 actual_sequence_number = 2;
  if (this->actual_sequence_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_actual_sequence_number());
  }

  // .come_together_grpc.send_chat_message_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void send_chat_message_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.send_chat_message_response)
  GOOGLE_DCHECK_NE(&from, this);
  const send_chat_message_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<send_chat_message_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.send_chat_message_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.send_chat_message_response)
    MergeFrom(*source);
  }
}

void send_chat_message_response::MergeFrom(const send_chat_message_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.send_chat_message_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message_uuid().size() > 0) {
    _internal_set_message_uuid(from._internal_message_uuid());
  }
  if (from.actual_sequence_number() != 0) {
    _internal_set_actual_sequence_number(from._internal_actual_sequence_number());
  }
  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void send_chat_message_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.send_chat_message_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void send_chat_message_response::CopyFrom(const send_chat_message_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.send_chat_message_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool send_chat_message_response::IsInitialized() const {
  return true;
}

void send_chat_message_response::InternalSwap(send_chat_message_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_uuid_.Swap(&other->message_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(send_chat_message_response, res_)
      + sizeof(send_chat_message_response::res_)
      - PROTOBUF_FIELD_OFFSET(send_chat_message_response, actual_sequence_number_)>(
          reinterpret_cast<char*>(&actual_sequence_number_),
          reinterpret_cast<char*>(&other->actual_sequence_number_));
}

::PROTOBUF_NAMESPACE_ID::Metadata send_chat_message_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void get_info_request::InitAsDefaultInstance() {
}
class get_info_request::_Internal {
 public:
};

get_info_request::get_info_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.get_info_request)
}
get_info_request::get_info_request(const get_info_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_token().empty()) {
    token_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_token(),
      GetArena());
  }
  target_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_uuid().empty()) {
    target_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_uuid(),
      GetArena());
  }
  info_type_ = from.info_type_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.get_info_request)
}

void get_info_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_get_info_request_come_5ftogether_2eproto.base);
  token_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  info_type_ = 0;
}

get_info_request::~get_info_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.get_info_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void get_info_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  token_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  target_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void get_info_request::ArenaDtor(void* object) {
  get_info_request* _this = reinterpret_cast< get_info_request* >(object);
  (void)_this;
}
void get_info_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void get_info_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const get_info_request& get_info_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_get_info_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void get_info_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.get_info_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  info_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* get_info_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.get_info_request.type info_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_info_type(static_cast<::come_together_grpc::get_info_request_type>(val));
        } else goto handle_unusual;
        continue;
      // string token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_token();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.get_info_request.token"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target_uuid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_target_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.get_info_request.target_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* get_info_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.get_info_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.get_info_request.type info_type = 1;
  if (this->info_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_info_type(), target);
  }

  // string token = 2;
  if (this->token().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_token().data(), static_cast<int>(this->_internal_token().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.get_info_request.token");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_token(), target);
  }

  // string target_uuid = 3;
  if (this->target_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_uuid().data(), static_cast<int>(this->_internal_target_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.get_info_request.target_uuid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_target_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.get_info_request)
  return target;
}

size_t get_info_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.get_info_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_token());
  }

  // string target_uuid = 3;
  if (this->target_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_uuid());
  }

  // .come_together_grpc.get_info_request.type info_type = 1;
  if (this->info_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_info_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void get_info_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.get_info_request)
  GOOGLE_DCHECK_NE(&from, this);
  const get_info_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<get_info_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.get_info_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.get_info_request)
    MergeFrom(*source);
  }
}

void get_info_request::MergeFrom(const get_info_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.get_info_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {
    _internal_set_token(from._internal_token());
  }
  if (from.target_uuid().size() > 0) {
    _internal_set_target_uuid(from._internal_target_uuid());
  }
  if (from.info_type() != 0) {
    _internal_set_info_type(from._internal_info_type());
  }
}

void get_info_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.get_info_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void get_info_request::CopyFrom(const get_info_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.get_info_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool get_info_request::IsInitialized() const {
  return true;
}

void get_info_request::InternalSwap(get_info_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  token_.Swap(&other->token_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  target_uuid_.Swap(&other->target_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(info_type_, other->info_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata get_info_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void get_info_response::InitAsDefaultInstance() {
  ::come_together_grpc::_get_info_response_default_instance_.u_info_ = const_cast< ::come_together_grpc::user_info*>(
      ::come_together_grpc::user_info::internal_default_instance());
  ::come_together_grpc::_get_info_response_default_instance_.m_info_ = const_cast< ::come_together_grpc::marker_info*>(
      ::come_together_grpc::marker_info::internal_default_instance());
  ::come_together_grpc::_get_info_response_default_instance_.c_info_ = const_cast< ::come_together_grpc::chat_info*>(
      ::come_together_grpc::chat_info::internal_default_instance());
}
class get_info_response::_Internal {
 public:
  static const ::come_together_grpc::user_info& u_info(const get_info_response* msg);
  static const ::come_together_grpc::marker_info& m_info(const get_info_response* msg);
  static const ::come_together_grpc::chat_info& c_info(const get_info_response* msg);
};

const ::come_together_grpc::user_info&
get_info_response::_Internal::u_info(const get_info_response* msg) {
  return *msg->data_.u_info_;
}
const ::come_together_grpc::marker_info&
get_info_response::_Internal::m_info(const get_info_response* msg) {
  return *msg->data_.m_info_;
}
const ::come_together_grpc::chat_info&
get_info_response::_Internal::c_info(const get_info_response* msg) {
  return *msg->data_.c_info_;
}
void get_info_response::set_allocated_u_info(::come_together_grpc::user_info* u_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (u_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(u_info);
    if (message_arena != submessage_arena) {
      u_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, u_info, submessage_arena);
    }
    set_has_u_info();
    data_.u_info_ = u_info;
  }
  // @@protoc_insertion_point(field_set_allocated:come_together_grpc.get_info_response.u_info)
}
void get_info_response::set_allocated_m_info(::come_together_grpc::marker_info* m_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (m_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(m_info);
    if (message_arena != submessage_arena) {
      m_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, m_info, submessage_arena);
    }
    set_has_m_info();
    data_.m_info_ = m_info;
  }
  // @@protoc_insertion_point(field_set_allocated:come_together_grpc.get_info_response.m_info)
}
void get_info_response::set_allocated_c_info(::come_together_grpc::chat_info* c_info) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_data();
  if (c_info) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(c_info);
    if (message_arena != submessage_arena) {
      c_info = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, c_info, submessage_arena);
    }
    set_has_c_info();
    data_.c_info_ = c_info;
  }
  // @@protoc_insertion_point(field_set_allocated:come_together_grpc.get_info_response.c_info)
}
get_info_response::get_info_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.get_info_response)
}
get_info_response::get_info_response(const get_info_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_data();
  switch (from.data_case()) {
    case kUInfo: {
      _internal_mutable_u_info()->::come_together_grpc::user_info::MergeFrom(from._internal_u_info());
      break;
    }
    case kMInfo: {
      _internal_mutable_m_info()->::come_together_grpc::marker_info::MergeFrom(from._internal_m_info());
      break;
    }
    case kCInfo: {
      _internal_mutable_c_info()->::come_together_grpc::chat_info::MergeFrom(from._internal_c_info());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.get_info_response)
}

void get_info_response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_get_info_response_come_5ftogether_2eproto.base);
  clear_has_data();
}

get_info_response::~get_info_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.get_info_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void get_info_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_data()) {
    clear_data();
  }
}

void get_info_response::ArenaDtor(void* object) {
  get_info_response* _this = reinterpret_cast< get_info_response* >(object);
  (void)_this;
}
void get_info_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void get_info_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const get_info_response& get_info_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_get_info_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void get_info_response::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:come_together_grpc.get_info_response)
  switch (data_case()) {
    case kUInfo: {
      if (GetArena() == nullptr) {
        delete data_.u_info_;
      }
      break;
    }
    case kMInfo: {
      if (GetArena() == nullptr) {
        delete data_.m_info_;
      }
      break;
    }
    case kCInfo: {
      if (GetArena() == nullptr) {
        delete data_.c_info_;
      }
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void get_info_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.get_info_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* get_info_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.user_info u_info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_u_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.marker_info m_info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_m_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.chat_info c_info = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_c_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* get_info_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.get_info_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.user_info u_info = 1;
  if (_internal_has_u_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::u_info(this), target, stream);
  }

  // .come_together_grpc.marker_info m_info = 2;
  if (_internal_has_m_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::m_info(this), target, stream);
  }

  // .come_together_grpc.chat_info c_info = 3;
  if (_internal_has_c_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::c_info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.get_info_response)
  return target;
}

size_t get_info_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.get_info_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (data_case()) {
    // .come_together_grpc.user_info u_info = 1;
    case kUInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.u_info_);
      break;
    }
    // .come_together_grpc.marker_info m_info = 2;
    case kMInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.m_info_);
      break;
    }
    // .come_together_grpc.chat_info c_info = 3;
    case kCInfo: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *data_.c_info_);
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void get_info_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.get_info_response)
  GOOGLE_DCHECK_NE(&from, this);
  const get_info_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<get_info_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.get_info_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.get_info_response)
    MergeFrom(*source);
  }
}

void get_info_response::MergeFrom(const get_info_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.get_info_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.data_case()) {
    case kUInfo: {
      _internal_mutable_u_info()->::come_together_grpc::user_info::MergeFrom(from._internal_u_info());
      break;
    }
    case kMInfo: {
      _internal_mutable_m_info()->::come_together_grpc::marker_info::MergeFrom(from._internal_m_info());
      break;
    }
    case kCInfo: {
      _internal_mutable_c_info()->::come_together_grpc::chat_info::MergeFrom(from._internal_c_info());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void get_info_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.get_info_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void get_info_response::CopyFrom(const get_info_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.get_info_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool get_info_response::IsInitialized() const {
  return true;
}

void get_info_response::InternalSwap(get_info_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata get_info_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void get_images_request::InitAsDefaultInstance() {
  ::come_together_grpc::_get_images_request_default_instance_._instance.get_mutable()->token_ = const_cast< ::come_together_grpc::access_token*>(
      ::come_together_grpc::access_token::internal_default_instance());
}
class get_images_request::_Internal {
 public:
  static const ::come_together_grpc::access_token& token(const get_images_request* msg);
};

const ::come_together_grpc::access_token&
get_images_request::_Internal::token(const get_images_request* msg) {
  return *msg->token_;
}
get_images_request::get_images_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.get_images_request)
}
get_images_request::get_images_request(const get_images_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  target_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_uuid().empty()) {
    target_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_uuid(),
      GetArena());
  }
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_hash().empty()) {
    hash_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_hash(),
      GetArena());
  }
  if (from._internal_has_token()) {
    token_ = new ::come_together_grpc::access_token(*from.token_);
  } else {
    token_ = nullptr;
  }
  ::memcpy(&image_type_, &from.image_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&starting_sequence_number_) -
    reinterpret_cast<char*>(&image_type_)) + sizeof(starting_sequence_number_));
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.get_images_request)
}

void get_images_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_get_images_request_come_5ftogether_2eproto.base);
  target_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starting_sequence_number_) -
      reinterpret_cast<char*>(&token_)) + sizeof(starting_sequence_number_));
}

get_images_request::~get_images_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.get_images_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void get_images_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  target_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete token_;
}

void get_images_request::ArenaDtor(void* object) {
  get_images_request* _this = reinterpret_cast< get_images_request* >(object);
  (void)_this;
}
void get_images_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void get_images_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const get_images_request& get_images_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_get_images_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void get_images_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.get_images_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hash_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
  ::memset(&image_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&starting_sequence_number_) -
      reinterpret_cast<char*>(&image_type_)) + sizeof(starting_sequence_number_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* get_images_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.get_images_request.type image_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_image_type(static_cast<::come_together_grpc::get_images_request_type>(val));
        } else goto handle_unusual;
        continue;
      // string target_uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_target_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.get_images_request.target_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.access_token token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          amount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string hash = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_hash();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.get_images_request.hash"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 starting_sequence_number = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          starting_sequence_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* get_images_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.get_images_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.get_images_request.type image_type = 1;
  if (this->image_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_image_type(), target);
  }

  // string target_uuid = 2;
  if (this->target_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_uuid().data(), static_cast<int>(this->_internal_target_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.get_images_request.target_uuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_target_uuid(), target);
  }

  // .come_together_grpc.access_token token = 3;
  if (this->has_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::token(this), target, stream);
  }

  // int32 amount = 4;
  if (this->amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_amount(), target);
  }

  // string hash = 5;
  if (this->hash().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hash().data(), static_cast<int>(this->_internal_hash().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.get_images_request.hash");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_hash(), target);
  }

  // int32 starting_sequence_number = 6;
  if (this->starting_sequence_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_starting_sequence_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.get_images_request)
  return target;
}

size_t get_images_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.get_images_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_uuid = 2;
  if (this->target_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_uuid());
  }

  // string hash = 5;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hash());
  }

  // .come_together_grpc.access_token token = 3;
  if (this->has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_);
  }

  // .come_together_grpc.get_images_request.type image_type = 1;
  if (this->image_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_image_type());
  }

  // int32 amount = 4;
  if (this->amount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_amount());
  }

  // int32 starting_sequence_number = 6;
  if (this->starting_sequence_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_starting_sequence_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void get_images_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.get_images_request)
  GOOGLE_DCHECK_NE(&from, this);
  const get_images_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<get_images_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.get_images_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.get_images_request)
    MergeFrom(*source);
  }
}

void get_images_request::MergeFrom(const get_images_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.get_images_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uuid().size() > 0) {
    _internal_set_target_uuid(from._internal_target_uuid());
  }
  if (from.hash().size() > 0) {
    _internal_set_hash(from._internal_hash());
  }
  if (from.has_token()) {
    _internal_mutable_token()->::come_together_grpc::access_token::MergeFrom(from._internal_token());
  }
  if (from.image_type() != 0) {
    _internal_set_image_type(from._internal_image_type());
  }
  if (from.amount() != 0) {
    _internal_set_amount(from._internal_amount());
  }
  if (from.starting_sequence_number() != 0) {
    _internal_set_starting_sequence_number(from._internal_starting_sequence_number());
  }
}

void get_images_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.get_images_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void get_images_request::CopyFrom(const get_images_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.get_images_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool get_images_request::IsInitialized() const {
  return true;
}

void get_images_request::InternalSwap(get_images_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  target_uuid_.Swap(&other->target_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  hash_.Swap(&other->hash_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(get_images_request, starting_sequence_number_)
      + sizeof(get_images_request::starting_sequence_number_)
      - PROTOBUF_FIELD_OFFSET(get_images_request, token_)>(
          reinterpret_cast<char*>(&token_),
          reinterpret_cast<char*>(&other->token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata get_images_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void manage_image_request::InitAsDefaultInstance() {
  ::come_together_grpc::_manage_image_request_default_instance_._instance.get_mutable()->token_ = const_cast< ::come_together_grpc::access_token*>(
      ::come_together_grpc::access_token::internal_default_instance());
  ::come_together_grpc::_manage_image_request_default_instance_.image_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::come_together_grpc::_manage_image_request_default_instance_.image_uuid_.UnsafeSetDefault(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
class manage_image_request::_Internal {
 public:
  static const ::come_together_grpc::access_token& token(const manage_image_request* msg);
};

const ::come_together_grpc::access_token&
manage_image_request::_Internal::token(const manage_image_request* msg) {
  return *msg->token_;
}
manage_image_request::manage_image_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.manage_image_request)
}
manage_image_request::manage_image_request(const manage_image_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  target_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_target_uuid().empty()) {
    target_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_target_uuid(),
      GetArena());
  }
  if (from._internal_has_token()) {
    token_ = new ::come_together_grpc::access_token(*from.token_);
  } else {
    token_ = nullptr;
  }
  act_ = from.act_;
  clear_has_data();
  switch (from.data_case()) {
    case kImage: {
      _internal_set_image(from._internal_image());
      break;
    }
    case kImageUuid: {
      _internal_set_image_uuid(from._internal_image_uuid());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.manage_image_request)
}

void manage_image_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_manage_image_request_come_5ftogether_2eproto.base);
  target_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&act_) -
      reinterpret_cast<char*>(&token_)) + sizeof(act_));
  clear_has_data();
}

manage_image_request::~manage_image_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.manage_image_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void manage_image_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  target_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete token_;
  if (has_data()) {
    clear_data();
  }
}

void manage_image_request::ArenaDtor(void* object) {
  manage_image_request* _this = reinterpret_cast< manage_image_request* >(object);
  (void)_this;
}
void manage_image_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void manage_image_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const manage_image_request& manage_image_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_manage_image_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void manage_image_request::clear_data() {
// @@protoc_insertion_point(one_of_clear_start:come_together_grpc.manage_image_request)
  switch (data_case()) {
    case kImage: {
      data_.image_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case kImageUuid: {
      data_.image_uuid_.Destroy(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DATA_NOT_SET;
}


void manage_image_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.manage_image_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
  act_ = 0;
  clear_data();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* manage_image_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.manage_image_request.action act = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_act(static_cast<::come_together_grpc::manage_image_request_action>(val));
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.access_token token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string target_uuid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_target_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.manage_image_request.target_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes image = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image_uuid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_image_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.manage_image_request.image_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* manage_image_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.manage_image_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.manage_image_request.action act = 1;
  if (this->act() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_act(), target);
  }

  // .come_together_grpc.access_token token = 2;
  if (this->has_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::token(this), target, stream);
  }

  // string target_uuid = 3;
  if (this->target_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_target_uuid().data(), static_cast<int>(this->_internal_target_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.manage_image_request.target_uuid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_target_uuid(), target);
  }

  // bytes image = 4;
  if (_internal_has_image()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_image(), target);
  }

  // string image_uuid = 5;
  if (_internal_has_image_uuid()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_uuid().data(), static_cast<int>(this->_internal_image_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.manage_image_request.image_uuid");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_image_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.manage_image_request)
  return target;
}

size_t manage_image_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.manage_image_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string target_uuid = 3;
  if (this->target_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_target_uuid());
  }

  // .come_together_grpc.access_token token = 2;
  if (this->has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_);
  }

  // .come_together_grpc.manage_image_request.action act = 1;
  if (this->act() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_act());
  }

  switch (data_case()) {
    // bytes image = 4;
    case kImage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_image());
      break;
    }
    // string image_uuid = 5;
    case kImageUuid: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_image_uuid());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void manage_image_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.manage_image_request)
  GOOGLE_DCHECK_NE(&from, this);
  const manage_image_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<manage_image_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.manage_image_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.manage_image_request)
    MergeFrom(*source);
  }
}

void manage_image_request::MergeFrom(const manage_image_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.manage_image_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uuid().size() > 0) {
    _internal_set_target_uuid(from._internal_target_uuid());
  }
  if (from.has_token()) {
    _internal_mutable_token()->::come_together_grpc::access_token::MergeFrom(from._internal_token());
  }
  if (from.act() != 0) {
    _internal_set_act(from._internal_act());
  }
  switch (from.data_case()) {
    case kImage: {
      _internal_set_image(from._internal_image());
      break;
    }
    case kImageUuid: {
      _internal_set_image_uuid(from._internal_image_uuid());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
}

void manage_image_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.manage_image_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void manage_image_request::CopyFrom(const manage_image_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.manage_image_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool manage_image_request::IsInitialized() const {
  return true;
}

void manage_image_request::InternalSwap(manage_image_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  target_uuid_.Swap(&other->target_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(manage_image_request, act_)
      + sizeof(manage_image_request::act_)
      - PROTOBUF_FIELD_OFFSET(manage_image_request, token_)>(
          reinterpret_cast<char*>(&token_),
          reinterpret_cast<char*>(&other->token_));
  swap(data_, other->data_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata manage_image_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void manage_image_response::InitAsDefaultInstance() {
}
class manage_image_response::_Internal {
 public:
};

manage_image_response::manage_image_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.manage_image_response)
}
manage_image_response::manage_image_response(const manage_image_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image_uuid().empty()) {
    image_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_image_uuid(),
      GetArena());
  }
  ::memcpy(&res_, &from.res_,
    static_cast<size_t>(reinterpret_cast<char*>(&image_sequence_number_) -
    reinterpret_cast<char*>(&res_)) + sizeof(image_sequence_number_));
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.manage_image_response)
}

void manage_image_response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_manage_image_response_come_5ftogether_2eproto.base);
  image_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&res_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_sequence_number_) -
      reinterpret_cast<char*>(&res_)) + sizeof(image_sequence_number_));
}

manage_image_response::~manage_image_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.manage_image_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void manage_image_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void manage_image_response::ArenaDtor(void* object) {
  manage_image_response* _this = reinterpret_cast< manage_image_response* >(object);
  (void)_this;
}
void manage_image_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void manage_image_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const manage_image_response& manage_image_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_manage_image_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void manage_image_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.manage_image_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&res_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&image_sequence_number_) -
      reinterpret_cast<char*>(&res_)) + sizeof(image_sequence_number_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* manage_image_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.manage_image_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::manage_image_response_result>(val));
        } else goto handle_unusual;
        continue;
      // string image_uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_image_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.manage_image_response.image_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 image_sequence_number = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          image_sequence_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* manage_image_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.manage_image_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.manage_image_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  // string image_uuid = 2;
  if (this->image_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image_uuid().data(), static_cast<int>(this->_internal_image_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.manage_image_response.image_uuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_image_uuid(), target);
  }

  // int32 image_sequence_number = 3;
  if (this->image_sequence_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_image_sequence_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.manage_image_response)
  return target;
}

size_t manage_image_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.manage_image_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string image_uuid = 2;
  if (this->image_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image_uuid());
  }

  // .come_together_grpc.manage_image_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  // int32 image_sequence_number = 3;
  if (this->image_sequence_number() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_image_sequence_number());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void manage_image_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.manage_image_response)
  GOOGLE_DCHECK_NE(&from, this);
  const manage_image_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<manage_image_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.manage_image_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.manage_image_response)
    MergeFrom(*source);
  }
}

void manage_image_response::MergeFrom(const manage_image_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.manage_image_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.image_uuid().size() > 0) {
    _internal_set_image_uuid(from._internal_image_uuid());
  }
  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
  if (from.image_sequence_number() != 0) {
    _internal_set_image_sequence_number(from._internal_image_sequence_number());
  }
}

void manage_image_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.manage_image_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void manage_image_response::CopyFrom(const manage_image_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.manage_image_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool manage_image_response::IsInitialized() const {
  return true;
}

void manage_image_response::InternalSwap(manage_image_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  image_uuid_.Swap(&other->image_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(manage_image_response, image_sequence_number_)
      + sizeof(manage_image_response::image_sequence_number_)
      - PROTOBUF_FIELD_OFFSET(manage_image_response, res_)>(
          reinterpret_cast<char*>(&res_),
          reinterpret_cast<char*>(&other->res_));
}

::PROTOBUF_NAMESPACE_ID::Metadata manage_image_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void check_request::InitAsDefaultInstance() {
}
class check_request::_Internal {
 public:
};

check_request::check_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.check_request)
}
check_request::check_request(const check_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  check_type_ = from.check_type_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.check_request)
}

void check_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_check_request_come_5ftogether_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  check_type_ = 0;
}

check_request::~check_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.check_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void check_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void check_request::ArenaDtor(void* object) {
  check_request* _this = reinterpret_cast< check_request* >(object);
  (void)_this;
}
void check_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void check_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const check_request& check_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_check_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void check_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.check_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  check_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* check_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.check_request.type check_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_check_type(static_cast<::come_together_grpc::check_request_type>(val));
        } else goto handle_unusual;
        continue;
      // string data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.check_request.data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* check_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.check_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.check_request.type check_type = 1;
  if (this->check_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_check_type(), target);
  }

  // string data = 2;
  if (this->data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data().data(), static_cast<int>(this->_internal_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.check_request.data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.check_request)
  return target;
}

size_t check_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.check_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data());
  }

  // .come_together_grpc.check_request.type check_type = 1;
  if (this->check_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_check_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void check_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.check_request)
  GOOGLE_DCHECK_NE(&from, this);
  const check_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<check_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.check_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.check_request)
    MergeFrom(*source);
  }
}

void check_request::MergeFrom(const check_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.check_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.check_type() != 0) {
    _internal_set_check_type(from._internal_check_type());
  }
}

void check_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.check_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void check_request::CopyFrom(const check_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.check_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool check_request::IsInitialized() const {
  return true;
}

void check_request::InternalSwap(check_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(check_type_, other->check_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata check_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void check_response::InitAsDefaultInstance() {
}
class check_response::_Internal {
 public:
};

check_response::check_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.check_response)
}
check_response::check_response(const check_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.check_response)
}

void check_response::SharedCtor() {
  res_ = 0;
}

check_response::~check_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.check_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void check_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void check_response::ArenaDtor(void* object) {
  check_response* _this = reinterpret_cast< check_response* >(object);
  (void)_this;
}
void check_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void check_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const check_response& check_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_check_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void check_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.check_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* check_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.check_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::check_response_result>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* check_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.check_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.check_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.check_response)
  return target;
}

size_t check_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.check_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.check_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void check_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.check_response)
  GOOGLE_DCHECK_NE(&from, this);
  const check_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<check_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.check_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.check_response)
    MergeFrom(*source);
  }
}

void check_response::MergeFrom(const check_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.check_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void check_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.check_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void check_response::CopyFrom(const check_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.check_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool check_response::IsInitialized() const {
  return true;
}

void check_response::InternalSwap(check_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(res_, other->res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata check_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void login_request::InitAsDefaultInstance() {
  ::come_together_grpc::_login_request_default_instance_._instance.get_mutable()->token_ = const_cast< ::come_together_grpc::access_token*>(
      ::come_together_grpc::access_token::internal_default_instance());
  ::come_together_grpc::_login_request_default_instance_._instance.get_mutable()->app_id_ = const_cast< ::come_together_grpc::application_id*>(
      ::come_together_grpc::application_id::internal_default_instance());
}
class login_request::_Internal {
 public:
  static const ::come_together_grpc::access_token& token(const login_request* msg);
  static const ::come_together_grpc::application_id& app_id(const login_request* msg);
};

const ::come_together_grpc::access_token&
login_request::_Internal::token(const login_request* msg) {
  return *msg->token_;
}
const ::come_together_grpc::application_id&
login_request::_Internal::app_id(const login_request* msg) {
  return *msg->app_id_;
}
login_request::login_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.login_request)
}
login_request::login_request(const login_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  login_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login().empty()) {
    login_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  if (from._internal_has_token()) {
    token_ = new ::come_together_grpc::access_token(*from.token_);
  } else {
    token_ = nullptr;
  }
  if (from._internal_has_app_id()) {
    app_id_ = new ::come_together_grpc::application_id(*from.app_id_);
  } else {
    app_id_ = nullptr;
  }
  typ_ = from.typ_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.login_request)
}

void login_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_login_request_come_5ftogether_2eproto.base);
  login_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typ_) -
      reinterpret_cast<char*>(&token_)) + sizeof(typ_));
}

login_request::~login_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.login_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void login_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  login_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete token_;
  if (this != internal_default_instance()) delete app_id_;
}

void login_request::ArenaDtor(void* object) {
  login_request* _this = reinterpret_cast< login_request* >(object);
  (void)_this;
}
void login_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void login_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const login_request& login_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_login_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void login_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.login_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  login_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
  if (GetArena() == nullptr && app_id_ != nullptr) {
    delete app_id_;
  }
  app_id_ = nullptr;
  typ_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* login_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.login_request.type typ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_typ(static_cast<::come_together_grpc::login_request_type>(val));
        } else goto handle_unusual;
        continue;
      // string login = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_login();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.login_request.login"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.login_request.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.access_token token = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.application_id app_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_app_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* login_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.login_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.login_request.type typ = 1;
  if (this->typ() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_typ(), target);
  }

  // string login = 2;
  if (this->login().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login().data(), static_cast<int>(this->_internal_login().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.login_request.login");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_login(), target);
  }

  // string password = 3;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.login_request.password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_password(), target);
  }

  // .come_together_grpc.access_token token = 4;
  if (this->has_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::token(this), target, stream);
  }

  // .come_together_grpc.application_id app_id = 5;
  if (this->has_app_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::app_id(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.login_request)
  return target;
}

size_t login_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.login_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string login = 2;
  if (this->login().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login());
  }

  // string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // .come_together_grpc.access_token token = 4;
  if (this->has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_);
  }

  // .come_together_grpc.application_id app_id = 5;
  if (this->has_app_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *app_id_);
  }

  // .come_together_grpc.login_request.type typ = 1;
  if (this->typ() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_typ());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void login_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.login_request)
  GOOGLE_DCHECK_NE(&from, this);
  const login_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<login_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.login_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.login_request)
    MergeFrom(*source);
  }
}

void login_request::MergeFrom(const login_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.login_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.login().size() > 0) {
    _internal_set_login(from._internal_login());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.has_token()) {
    _internal_mutable_token()->::come_together_grpc::access_token::MergeFrom(from._internal_token());
  }
  if (from.has_app_id()) {
    _internal_mutable_app_id()->::come_together_grpc::application_id::MergeFrom(from._internal_app_id());
  }
  if (from.typ() != 0) {
    _internal_set_typ(from._internal_typ());
  }
}

void login_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.login_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void login_request::CopyFrom(const login_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.login_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool login_request::IsInitialized() const {
  return true;
}

void login_request::InternalSwap(login_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  login_.Swap(&other->login_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(login_request, typ_)
      + sizeof(login_request::typ_)
      - PROTOBUF_FIELD_OFFSET(login_request, token_)>(
          reinterpret_cast<char*>(&token_),
          reinterpret_cast<char*>(&other->token_));
}

::PROTOBUF_NAMESPACE_ID::Metadata login_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void login_response::InitAsDefaultInstance() {
  ::come_together_grpc::_login_response_default_instance_._instance.get_mutable()->info_ = const_cast< ::come_together_grpc::user_info*>(
      ::come_together_grpc::user_info::internal_default_instance());
  ::come_together_grpc::_login_response_default_instance_._instance.get_mutable()->token_ = const_cast< ::come_together_grpc::access_token*>(
      ::come_together_grpc::access_token::internal_default_instance());
}
class login_response::_Internal {
 public:
  static const ::come_together_grpc::user_info& info(const login_response* msg);
  static const ::come_together_grpc::access_token& token(const login_response* msg);
};

const ::come_together_grpc::user_info&
login_response::_Internal::info(const login_response* msg) {
  return *msg->info_;
}
const ::come_together_grpc::access_token&
login_response::_Internal::token(const login_response* msg) {
  return *msg->token_;
}
login_response::login_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.login_response)
}
login_response::login_response(const login_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    info_ = new ::come_together_grpc::user_info(*from.info_);
  } else {
    info_ = nullptr;
  }
  if (from._internal_has_token()) {
    token_ = new ::come_together_grpc::access_token(*from.token_);
  } else {
    token_ = nullptr;
  }
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.login_response)
}

void login_response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_login_response_come_5ftogether_2eproto.base);
  ::memset(&info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&info_)) + sizeof(res_));
}

login_response::~login_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.login_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void login_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete info_;
  if (this != internal_default_instance()) delete token_;
}

void login_response::ArenaDtor(void* object) {
  login_response* _this = reinterpret_cast< login_response* >(object);
  (void)_this;
}
void login_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void login_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const login_response& login_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_login_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void login_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.login_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  if (GetArena() == nullptr && token_ != nullptr) {
    delete token_;
  }
  token_ = nullptr;
  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* login_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.login_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::login_response_result>(val));
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.user_info info = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.access_token token = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_token(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* login_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.login_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.login_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  // .come_together_grpc.user_info info = 2;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::info(this), target, stream);
  }

  // .come_together_grpc.access_token token = 3;
  if (this->has_token()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::token(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.login_response)
  return target;
}

size_t login_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.login_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.user_info info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  // .come_together_grpc.access_token token = 3;
  if (this->has_token()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *token_);
  }

  // .come_together_grpc.login_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void login_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.login_response)
  GOOGLE_DCHECK_NE(&from, this);
  const login_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<login_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.login_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.login_response)
    MergeFrom(*source);
  }
}

void login_response::MergeFrom(const login_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.login_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    _internal_mutable_info()->::come_together_grpc::user_info::MergeFrom(from._internal_info());
  }
  if (from.has_token()) {
    _internal_mutable_token()->::come_together_grpc::access_token::MergeFrom(from._internal_token());
  }
  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void login_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.login_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void login_response::CopyFrom(const login_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.login_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool login_response::IsInitialized() const {
  return true;
}

void login_response::InternalSwap(login_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(login_response, res_)
      + sizeof(login_response::res_)
      - PROTOBUF_FIELD_OFFSET(login_response, info_)>(
          reinterpret_cast<char*>(&info_),
          reinterpret_cast<char*>(&other->info_));
}

::PROTOBUF_NAMESPACE_ID::Metadata login_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void register_request::InitAsDefaultInstance() {
  ::come_together_grpc::_register_request_default_instance_._instance.get_mutable()->info_ = const_cast< ::come_together_grpc::user_info*>(
      ::come_together_grpc::user_info::internal_default_instance());
}
class register_request::_Internal {
 public:
  static const ::come_together_grpc::user_info& info(const register_request* msg);
};

const ::come_together_grpc::user_info&
register_request::_Internal::info(const register_request* msg) {
  return *msg->info_;
}
register_request::register_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.register_request)
}
register_request::register_request(const register_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    info_ = new ::come_together_grpc::user_info(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.register_request)
}

void register_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_register_request_come_5ftogether_2eproto.base);
  info_ = nullptr;
}

register_request::~register_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.register_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void register_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete info_;
}

void register_request::ArenaDtor(void* object) {
  register_request* _this = reinterpret_cast< register_request* >(object);
  (void)_this;
}
void register_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void register_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const register_request& register_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_register_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void register_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.register_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* register_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.user_info info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* register_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.register_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.user_info info = 1;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.register_request)
  return target;
}

size_t register_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.register_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.user_info info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void register_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.register_request)
  GOOGLE_DCHECK_NE(&from, this);
  const register_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<register_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.register_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.register_request)
    MergeFrom(*source);
  }
}

void register_request::MergeFrom(const register_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.register_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    _internal_mutable_info()->::come_together_grpc::user_info::MergeFrom(from._internal_info());
  }
}

void register_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.register_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void register_request::CopyFrom(const register_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.register_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool register_request::IsInitialized() const {
  return true;
}

void register_request::InternalSwap(register_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(info_, other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata register_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void register_response::InitAsDefaultInstance() {
}
class register_response::_Internal {
 public:
};

register_response::register_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.register_response)
}
register_response::register_response(const register_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  user_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_user_uuid().empty()) {
    user_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_user_uuid(),
      GetArena());
  }
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.register_response)
}

void register_response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_register_response_come_5ftogether_2eproto.base);
  user_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  res_ = 0;
}

register_response::~register_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.register_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void register_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  user_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void register_response::ArenaDtor(void* object) {
  register_response* _this = reinterpret_cast< register_response* >(object);
  (void)_this;
}
void register_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void register_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const register_response& register_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_register_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void register_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.register_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  user_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* register_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.register_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::register_response_result>(val));
        } else goto handle_unusual;
        continue;
      // string user_uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_user_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.register_response.user_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* register_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.register_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.register_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  // string user_uuid = 2;
  if (this->user_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_user_uuid().data(), static_cast<int>(this->_internal_user_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.register_response.user_uuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_user_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.register_response)
  return target;
}

size_t register_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.register_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string user_uuid = 2;
  if (this->user_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_user_uuid());
  }

  // .come_together_grpc.register_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void register_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.register_response)
  GOOGLE_DCHECK_NE(&from, this);
  const register_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<register_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.register_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.register_response)
    MergeFrom(*source);
  }
}

void register_response::MergeFrom(const register_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.register_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.user_uuid().size() > 0) {
    _internal_set_user_uuid(from._internal_user_uuid());
  }
  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void register_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.register_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void register_response::CopyFrom(const register_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.register_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool register_response::IsInitialized() const {
  return true;
}

void register_response::InternalSwap(register_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  user_uuid_.Swap(&other->user_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(res_, other->res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata register_response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void user_info::InitAsDefaultInstance() {
}
class user_info::_Internal {
 public:
};

user_info::user_info(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  images_uuid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.user_info)
}
user_info::user_info(const user_info& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      images_uuid_(from.images_uuid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uuid(),
      GetArena());
  }
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_email().empty()) {
    email_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_email(),
      GetArena());
  }
  login_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_login().empty()) {
    login_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_login(),
      GetArena());
  }
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_password().empty()) {
    password_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_password(),
      GetArena());
  }
  first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_first_name().empty()) {
    first_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_first_name(),
      GetArena());
  }
  last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_last_name().empty()) {
    last_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_last_name(),
      GetArena());
  }
  other_info_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_other_info_json().empty()) {
    other_info_json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_other_info_json(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.user_info)
}

void user_info::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_user_info_come_5ftogether_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  login_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  first_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  other_info_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

user_info::~user_info() {
  // @@protoc_insertion_point(destructor:come_together_grpc.user_info)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void user_info::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  login_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  first_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  last_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  other_info_json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void user_info::ArenaDtor(void* object) {
  user_info* _this = reinterpret_cast< user_info* >(object);
  (void)_this;
}
void user_info::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void user_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const user_info& user_info::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_user_info_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void user_info::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.user_info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_uuid_.Clear();
  uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  login_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  first_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  last_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  other_info_json_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* user_info::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.user_info.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string email = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_email();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.user_info.email"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string login = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_login();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.user_info.login"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.user_info.password"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string first_name = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_first_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.user_info.first_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string last_name = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_last_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.user_info.last_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string images_uuid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_images_uuid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.user_info.images_uuid"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      // string other_info_json = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_other_info_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.user_info.other_info_json"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* user_info::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.user_info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.user_info.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // string email = 2;
  if (this->email().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.user_info.email");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_email(), target);
  }

  // string login = 3;
  if (this->login().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_login().data(), static_cast<int>(this->_internal_login().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.user_info.login");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_login(), target);
  }

  // string password = 4;
  if (this->password().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.user_info.password");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_password(), target);
  }

  // string first_name = 5;
  if (this->first_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_first_name().data(), static_cast<int>(this->_internal_first_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.user_info.first_name");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_first_name(), target);
  }

  // string last_name = 6;
  if (this->last_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_last_name().data(), static_cast<int>(this->_internal_last_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.user_info.last_name");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_last_name(), target);
  }

  // repeated string images_uuid = 7;
  for (int i = 0, n = this->_internal_images_uuid_size(); i < n; i++) {
    const auto& s = this->_internal_images_uuid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.user_info.images_uuid");
    target = stream->WriteString(7, s, target);
  }

  // string other_info_json = 8;
  if (this->other_info_json().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_other_info_json().data(), static_cast<int>(this->_internal_other_info_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.user_info.other_info_json");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_other_info_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.user_info)
  return target;
}

size_t user_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.user_info)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string images_uuid = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(images_uuid_.size());
  for (int i = 0, n = images_uuid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      images_uuid_.Get(i));
  }

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string email = 2;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string login = 3;
  if (this->login().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_login());
  }

  // string password = 4;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string first_name = 5;
  if (this->first_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_first_name());
  }

  // string last_name = 6;
  if (this->last_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_last_name());
  }

  // string other_info_json = 8;
  if (this->other_info_json().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_other_info_json());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void user_info::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.user_info)
  GOOGLE_DCHECK_NE(&from, this);
  const user_info* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<user_info>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.user_info)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.user_info)
    MergeFrom(*source);
  }
}

void user_info::MergeFrom(const user_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.user_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_uuid_.MergeFrom(from.images_uuid_);
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.email().size() > 0) {
    _internal_set_email(from._internal_email());
  }
  if (from.login().size() > 0) {
    _internal_set_login(from._internal_login());
  }
  if (from.password().size() > 0) {
    _internal_set_password(from._internal_password());
  }
  if (from.first_name().size() > 0) {
    _internal_set_first_name(from._internal_first_name());
  }
  if (from.last_name().size() > 0) {
    _internal_set_last_name(from._internal_last_name());
  }
  if (from.other_info_json().size() > 0) {
    _internal_set_other_info_json(from._internal_other_info_json());
  }
}

void user_info::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.user_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void user_info::CopyFrom(const user_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.user_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool user_info::IsInitialized() const {
  return true;
}

void user_info::InternalSwap(user_info* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  images_uuid_.InternalSwap(&other->images_uuid_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  email_.Swap(&other->email_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  login_.Swap(&other->login_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  password_.Swap(&other->password_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  first_name_.Swap(&other->first_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  last_name_.Swap(&other->last_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  other_info_json_.Swap(&other->other_info_json_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata user_info::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void marker_info::InitAsDefaultInstance() {
}
class marker_info::_Internal {
 public:
};

marker_info::marker_info(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  images_uuid_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.marker_info)
}
marker_info::marker_info(const marker_info& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      images_uuid_(from.images_uuid_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  creator_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_creator_uuid().empty()) {
    creator_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_creator_uuid(),
      GetArena());
  }
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_display_name().empty()) {
    display_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_display_name(),
      GetArena());
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uuid(),
      GetArena());
  }
  chat_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chat_uuid().empty()) {
    chat_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_chat_uuid(),
      GetArena());
  }
  other_data_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_other_data_json().empty()) {
    other_data_json_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_other_data_json(),
      GetArena());
  }
  ::memcpy(&cat_, &from.cat_,
    static_cast<size_t>(reinterpret_cast<char*>(&longitude_) -
    reinterpret_cast<char*>(&cat_)) + sizeof(longitude_));
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.marker_info)
}

void marker_info::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_marker_info_come_5ftogether_2eproto.base);
  creator_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chat_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  other_data_json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&cat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&cat_)) + sizeof(longitude_));
}

marker_info::~marker_info() {
  // @@protoc_insertion_point(destructor:come_together_grpc.marker_info)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void marker_info::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  creator_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chat_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  other_data_json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void marker_info::ArenaDtor(void* object) {
  marker_info* _this = reinterpret_cast< marker_info* >(object);
  (void)_this;
}
void marker_info::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void marker_info::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const marker_info& marker_info::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_marker_info_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void marker_info::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.marker_info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_uuid_.Clear();
  creator_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  display_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chat_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  other_data_json_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&cat_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&longitude_) -
      reinterpret_cast<char*>(&cat_)) + sizeof(longitude_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* marker_info::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.marker_info.category cat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_cat(static_cast<::come_together_grpc::marker_info_category>(val));
        } else goto handle_unusual;
        continue;
      // .come_together_grpc.marker_info.type marker_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_marker_type(static_cast<::come_together_grpc::marker_info_type>(val));
        } else goto handle_unusual;
        continue;
      // int64 from_unix_time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          from_unix_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 to_unix_time = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          to_unix_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 creation_unix_time = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          creation_unix_time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string creator_uuid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_creator_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.marker_info.creator_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string display_name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_display_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.marker_info.display_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double latitude = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          latitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // double longitude = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          longitude_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string uuid = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.marker_info.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string chat_uuid = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_chat_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.marker_info.chat_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string images_uuid = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_images_uuid();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.marker_info.images_uuid"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else goto handle_unusual;
        continue;
      // string other_data_json = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_other_data_json();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.marker_info.other_data_json"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* marker_info::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.marker_info)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.marker_info.category cat = 1;
  if (this->cat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_cat(), target);
  }

  // .come_together_grpc.marker_info.type marker_type = 2;
  if (this->marker_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_marker_type(), target);
  }

  // int64 from_unix_time = 3;
  if (this->from_unix_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_from_unix_time(), target);
  }

  // int64 to_unix_time = 4;
  if (this->to_unix_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_to_unix_time(), target);
  }

  // int64 creation_unix_time = 5;
  if (this->creation_unix_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_creation_unix_time(), target);
  }

  // string creator_uuid = 6;
  if (this->creator_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator_uuid().data(), static_cast<int>(this->_internal_creator_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.marker_info.creator_uuid");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_creator_uuid(), target);
  }

  // string display_name = 7;
  if (this->display_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_display_name().data(), static_cast<int>(this->_internal_display_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.marker_info.display_name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_display_name(), target);
  }

  // double latitude = 9;
  if (!(this->latitude() <= 0 && this->latitude() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_latitude(), target);
  }

  // double longitude = 10;
  if (!(this->longitude() <= 0 && this->longitude() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_longitude(), target);
  }

  // string uuid = 11;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.marker_info.uuid");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_uuid(), target);
  }

  // string chat_uuid = 12;
  if (this->chat_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chat_uuid().data(), static_cast<int>(this->_internal_chat_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.marker_info.chat_uuid");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_chat_uuid(), target);
  }

  // repeated string images_uuid = 13;
  for (int i = 0, n = this->_internal_images_uuid_size(); i < n; i++) {
    const auto& s = this->_internal_images_uuid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.marker_info.images_uuid");
    target = stream->WriteString(13, s, target);
  }

  // string other_data_json = 14;
  if (this->other_data_json().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_other_data_json().data(), static_cast<int>(this->_internal_other_data_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.marker_info.other_data_json");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_other_data_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.marker_info)
  return target;
}

size_t marker_info::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.marker_info)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string images_uuid = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(images_uuid_.size());
  for (int i = 0, n = images_uuid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      images_uuid_.Get(i));
  }

  // string creator_uuid = 6;
  if (this->creator_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator_uuid());
  }

  // string display_name = 7;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_display_name());
  }

  // string uuid = 11;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string chat_uuid = 12;
  if (this->chat_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chat_uuid());
  }

  // string other_data_json = 14;
  if (this->other_data_json().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_other_data_json());
  }

  // .come_together_grpc.marker_info.category cat = 1;
  if (this->cat() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_cat());
  }

  // .come_together_grpc.marker_info.type marker_type = 2;
  if (this->marker_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_marker_type());
  }

  // int64 from_unix_time = 3;
  if (this->from_unix_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_from_unix_time());
  }

  // int64 to_unix_time = 4;
  if (this->to_unix_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_to_unix_time());
  }

  // int64 creation_unix_time = 5;
  if (this->creation_unix_time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_creation_unix_time());
  }

  // double latitude = 9;
  if (!(this->latitude() <= 0 && this->latitude() >= 0)) {
    total_size += 1 + 8;
  }

  // double longitude = 10;
  if (!(this->longitude() <= 0 && this->longitude() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void marker_info::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.marker_info)
  GOOGLE_DCHECK_NE(&from, this);
  const marker_info* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<marker_info>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.marker_info)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.marker_info)
    MergeFrom(*source);
  }
}

void marker_info::MergeFrom(const marker_info& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.marker_info)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_uuid_.MergeFrom(from.images_uuid_);
  if (from.creator_uuid().size() > 0) {
    _internal_set_creator_uuid(from._internal_creator_uuid());
  }
  if (from.display_name().size() > 0) {
    _internal_set_display_name(from._internal_display_name());
  }
  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.chat_uuid().size() > 0) {
    _internal_set_chat_uuid(from._internal_chat_uuid());
  }
  if (from.other_data_json().size() > 0) {
    _internal_set_other_data_json(from._internal_other_data_json());
  }
  if (from.cat() != 0) {
    _internal_set_cat(from._internal_cat());
  }
  if (from.marker_type() != 0) {
    _internal_set_marker_type(from._internal_marker_type());
  }
  if (from.from_unix_time() != 0) {
    _internal_set_from_unix_time(from._internal_from_unix_time());
  }
  if (from.to_unix_time() != 0) {
    _internal_set_to_unix_time(from._internal_to_unix_time());
  }
  if (from.creation_unix_time() != 0) {
    _internal_set_creation_unix_time(from._internal_creation_unix_time());
  }
  if (!(from.latitude() <= 0 && from.latitude() >= 0)) {
    _internal_set_latitude(from._internal_latitude());
  }
  if (!(from.longitude() <= 0 && from.longitude() >= 0)) {
    _internal_set_longitude(from._internal_longitude());
  }
}

void marker_info::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.marker_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void marker_info::CopyFrom(const marker_info& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.marker_info)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool marker_info::IsInitialized() const {
  return true;
}

void marker_info::InternalSwap(marker_info* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  images_uuid_.InternalSwap(&other->images_uuid_);
  creator_uuid_.Swap(&other->creator_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  display_name_.Swap(&other->display_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chat_uuid_.Swap(&other->chat_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  other_data_json_.Swap(&other->other_data_json_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(marker_info, longitude_)
      + sizeof(marker_info::longitude_)
      - PROTOBUF_FIELD_OFFSET(marker_info, cat_)>(
          reinterpret_cast<char*>(&cat_),
          reinterpret_cast<char*>(&other->cat_));
}

::PROTOBUF_NAMESPACE_ID::Metadata marker_info::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void add_marker_request::InitAsDefaultInstance() {
  ::come_together_grpc::_add_marker_request_default_instance_._instance.get_mutable()->info_ = const_cast< ::come_together_grpc::marker_info*>(
      ::come_together_grpc::marker_info::internal_default_instance());
}
class add_marker_request::_Internal {
 public:
  static const ::come_together_grpc::marker_info& info(const add_marker_request* msg);
};

const ::come_together_grpc::marker_info&
add_marker_request::_Internal::info(const add_marker_request* msg) {
  return *msg->info_;
}
add_marker_request::add_marker_request(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.add_marker_request)
}
add_marker_request::add_marker_request(const add_marker_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_info()) {
    info_ = new ::come_together_grpc::marker_info(*from.info_);
  } else {
    info_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.add_marker_request)
}

void add_marker_request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_add_marker_request_come_5ftogether_2eproto.base);
  info_ = nullptr;
}

add_marker_request::~add_marker_request() {
  // @@protoc_insertion_point(destructor:come_together_grpc.add_marker_request)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void add_marker_request::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete info_;
}

void add_marker_request::ArenaDtor(void* object) {
  add_marker_request* _this = reinterpret_cast< add_marker_request* >(object);
  (void)_this;
}
void add_marker_request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void add_marker_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const add_marker_request& add_marker_request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_add_marker_request_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void add_marker_request::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.add_marker_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && info_ != nullptr) {
    delete info_;
  }
  info_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* add_marker_request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.marker_info info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* add_marker_request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.add_marker_request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.marker_info info = 1;
  if (this->has_info()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::info(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.add_marker_request)
  return target;
}

size_t add_marker_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.add_marker_request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .come_together_grpc.marker_info info = 1;
  if (this->has_info()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *info_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void add_marker_request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.add_marker_request)
  GOOGLE_DCHECK_NE(&from, this);
  const add_marker_request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<add_marker_request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.add_marker_request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.add_marker_request)
    MergeFrom(*source);
  }
}

void add_marker_request::MergeFrom(const add_marker_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.add_marker_request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_info()) {
    _internal_mutable_info()->::come_together_grpc::marker_info::MergeFrom(from._internal_info());
  }
}

void add_marker_request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.add_marker_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void add_marker_request::CopyFrom(const add_marker_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.add_marker_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool add_marker_request::IsInitialized() const {
  return true;
}

void add_marker_request::InternalSwap(add_marker_request* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(info_, other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata add_marker_request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void add_marker_response::InitAsDefaultInstance() {
}
class add_marker_response::_Internal {
 public:
};

add_marker_response::add_marker_response(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:come_together_grpc.add_marker_response)
}
add_marker_response::add_marker_response(const add_marker_response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uuid(),
      GetArena());
  }
  chat_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_chat_uuid().empty()) {
    chat_uuid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_chat_uuid(),
      GetArena());
  }
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:come_together_grpc.add_marker_response)
}

void add_marker_response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_add_marker_response_come_5ftogether_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chat_uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  res_ = 0;
}

add_marker_response::~add_marker_response() {
  // @@protoc_insertion_point(destructor:come_together_grpc.add_marker_response)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void add_marker_response::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  chat_uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void add_marker_response::ArenaDtor(void* object) {
  add_marker_response* _this = reinterpret_cast< add_marker_response* >(object);
  (void)_this;
}
void add_marker_response::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void add_marker_response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const add_marker_response& add_marker_response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_add_marker_response_come_5ftogether_2eproto.base);
  return *internal_default_instance();
}


void add_marker_response::Clear() {
// @@protoc_insertion_point(message_clear_start:come_together_grpc.add_marker_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chat_uuid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  res_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* add_marker_response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .come_together_grpc.add_marker_response.result res = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_res(static_cast<::come_together_grpc::add_marker_response_result>(val));
        } else goto handle_unusual;
        continue;
      // string uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.add_marker_response.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string chat_uuid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_chat_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "come_together_grpc.add_marker_response.chat_uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* add_marker_response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:come_together_grpc.add_marker_response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .come_together_grpc.add_marker_response.result res = 1;
  if (this->res() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_res(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.add_marker_response.uuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uuid(), target);
  }

  // string chat_uuid = 3;
  if (this->chat_uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_chat_uuid().data(), static_cast<int>(this->_internal_chat_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "come_together_grpc.add_marker_response.chat_uuid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_chat_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:come_together_grpc.add_marker_response)
  return target;
}

size_t add_marker_response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:come_together_grpc.add_marker_response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string chat_uuid = 3;
  if (this->chat_uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_chat_uuid());
  }

  // .come_together_grpc.add_marker_response.result res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_res());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void add_marker_response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:come_together_grpc.add_marker_response)
  GOOGLE_DCHECK_NE(&from, this);
  const add_marker_response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<add_marker_response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:come_together_grpc.add_marker_response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:come_together_grpc.add_marker_response)
    MergeFrom(*source);
  }
}

void add_marker_response::MergeFrom(const add_marker_response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:come_together_grpc.add_marker_response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uuid().size() > 0) {
    _internal_set_uuid(from._internal_uuid());
  }
  if (from.chat_uuid().size() > 0) {
    _internal_set_chat_uuid(from._internal_chat_uuid());
  }
  if (from.res() != 0) {
    _internal_set_res(from._internal_res());
  }
}

void add_marker_response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:come_together_grpc.add_marker_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void add_marker_response::CopyFrom(const add_marker_response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:come_together_grpc.add_marker_response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool add_marker_response::IsInitialized() const {
  return true;
}

void add_marker_response::InternalSwap(add_marker_response* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  chat_uuid_.Swap(&other->chat_uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(res_, other->res_);
}

::PROTOBUF_NAMESPACE_ID::Metadata add_marker_response::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace come_together_grpc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::come_together_grpc::image* Arena::CreateMaybeMessage< ::come_together_grpc::image >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::image >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::access_token* Arena::CreateMaybeMessage< ::come_together_grpc::access_token >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::access_token >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::application_id* Arena::CreateMaybeMessage< ::come_together_grpc::application_id >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::application_id >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::logout_request* Arena::CreateMaybeMessage< ::come_together_grpc::logout_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::logout_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::logout_response* Arena::CreateMaybeMessage< ::come_together_grpc::logout_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::logout_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::send_push_token_request* Arena::CreateMaybeMessage< ::come_together_grpc::send_push_token_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::send_push_token_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::send_push_token_response* Arena::CreateMaybeMessage< ::come_together_grpc::send_push_token_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::send_push_token_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::delete_marker_request* Arena::CreateMaybeMessage< ::come_together_grpc::delete_marker_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::delete_marker_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::delete_marker_reponse* Arena::CreateMaybeMessage< ::come_together_grpc::delete_marker_reponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::delete_marker_reponse >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::ask_token_request* Arena::CreateMaybeMessage< ::come_together_grpc::ask_token_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::ask_token_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::ask_token_response* Arena::CreateMaybeMessage< ::come_together_grpc::ask_token_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::ask_token_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::verify_token_request* Arena::CreateMaybeMessage< ::come_together_grpc::verify_token_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::verify_token_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::verify_token_response* Arena::CreateMaybeMessage< ::come_together_grpc::verify_token_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::verify_token_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::update_info_request* Arena::CreateMaybeMessage< ::come_together_grpc::update_info_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::update_info_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::update_info_response* Arena::CreateMaybeMessage< ::come_together_grpc::update_info_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::update_info_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::event* Arena::CreateMaybeMessage< ::come_together_grpc::event >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::event >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::chat_info* Arena::CreateMaybeMessage< ::come_together_grpc::chat_info >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::chat_info >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::get_chat_messages_request* Arena::CreateMaybeMessage< ::come_together_grpc::get_chat_messages_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::get_chat_messages_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::chat_message* Arena::CreateMaybeMessage< ::come_together_grpc::chat_message >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::chat_message >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::send_chat_message_request* Arena::CreateMaybeMessage< ::come_together_grpc::send_chat_message_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::send_chat_message_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::send_chat_message_response* Arena::CreateMaybeMessage< ::come_together_grpc::send_chat_message_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::send_chat_message_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::get_info_request* Arena::CreateMaybeMessage< ::come_together_grpc::get_info_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::get_info_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::get_info_response* Arena::CreateMaybeMessage< ::come_together_grpc::get_info_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::get_info_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::get_images_request* Arena::CreateMaybeMessage< ::come_together_grpc::get_images_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::get_images_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::manage_image_request* Arena::CreateMaybeMessage< ::come_together_grpc::manage_image_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::manage_image_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::manage_image_response* Arena::CreateMaybeMessage< ::come_together_grpc::manage_image_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::manage_image_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::check_request* Arena::CreateMaybeMessage< ::come_together_grpc::check_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::check_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::check_response* Arena::CreateMaybeMessage< ::come_together_grpc::check_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::check_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::login_request* Arena::CreateMaybeMessage< ::come_together_grpc::login_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::login_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::login_response* Arena::CreateMaybeMessage< ::come_together_grpc::login_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::login_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::register_request* Arena::CreateMaybeMessage< ::come_together_grpc::register_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::register_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::register_response* Arena::CreateMaybeMessage< ::come_together_grpc::register_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::register_response >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::user_info* Arena::CreateMaybeMessage< ::come_together_grpc::user_info >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::user_info >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::marker_info* Arena::CreateMaybeMessage< ::come_together_grpc::marker_info >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::marker_info >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::add_marker_request* Arena::CreateMaybeMessage< ::come_together_grpc::add_marker_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::add_marker_request >(arena);
}
template<> PROTOBUF_NOINLINE ::come_together_grpc::add_marker_response* Arena::CreateMaybeMessage< ::come_together_grpc::add_marker_response >(Arena* arena) {
  return Arena::CreateMessageInternal< ::come_together_grpc::add_marker_response >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
